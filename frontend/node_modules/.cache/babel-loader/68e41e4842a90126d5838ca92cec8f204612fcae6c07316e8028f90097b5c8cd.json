{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport IdentitySelection from '../components/IdentitySelection.vue';\nimport AuthForm from '../components/AuthForm.vue';\nimport CustomerDashboard from '../views/CustomerDashboard.vue';\nimport TechnicianDashboard from '../views/TechnicianDashboard.vue';\nimport AdminDashboard from '../views/AdminDashboard.vue';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'IdentitySelection',\n  component: IdentitySelection\n}, {\n  path: '/auth/:role',\n  name: 'Auth',\n  component: AuthForm,\n  props: true\n}, {\n  path: '/customer',\n  name: 'CustomerDashboard',\n  component: CustomerDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'customer'\n  }\n}, {\n  path: '/technician',\n  name: 'TechnicianDashboard',\n  component: TechnicianDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'technician'\n  }\n}, {\n  path: '/admin',\n  name: 'AdminDashboard',\n  component: AdminDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const requiredRole = to.meta.role;\n  const user = JSON.parse(localStorage.getItem('user') || 'null');\n  const userRole = localStorage.getItem('userRole');\n  if (requiresAuth) {\n    if (!user || !userRole) {\n      // 用户未登录，重定向到身份选择页面\n      next('/');\n    } else if (requiredRole && userRole !== requiredRole) {\n      // 用户角色不匹配，重定向到对应的dashboard\n      const dashboardMap = {\n        'customer': '/customer',\n        'technician': '/technician',\n        'admin': '/admin'\n      };\n      next(dashboardMap[userRole] || '/');\n    } else {\n      // 用户已登录且角色匹配\n      next();\n    }\n  } else {\n    // 不需要认证的页面\n    if (user && userRole && (to.path === '/' || to.path.startsWith('/auth'))) {\n      // 已登录用户访问登录页面，重定向到对应dashboard\n      const dashboardMap = {\n        'customer': '/customer',\n        'technician': '/technician',\n        'admin': '/admin'\n      };\n      next(dashboardMap[userRole] || '/');\n    } else {\n      next();\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","IdentitySelection","AuthForm","CustomerDashboard","TechnicianDashboard","AdminDashboard","use","routes","path","name","component","props","meta","requiresAuth","role","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","requiredRole","user","JSON","parse","localStorage","getItem","userRole","dashboardMap","startsWith"],"sources":["/Users/zhangwanbo/Desktop/vehicle-maintenance-management-system/vehicle-maintenance-management-system/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport IdentitySelection from '../components/IdentitySelection.vue'\nimport AuthForm from '../components/AuthForm.vue'\nimport CustomerDashboard from '../views/CustomerDashboard.vue'\nimport TechnicianDashboard from '../views/TechnicianDashboard.vue'\nimport AdminDashboard from '../views/AdminDashboard.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'IdentitySelection',\n    component: IdentitySelection\n  },\n  {\n    path: '/auth/:role',\n    name: 'Auth',\n    component: AuthForm,\n    props: true\n  },\n  {\n    path: '/customer',\n    name: 'CustomerDashboard',\n    component: CustomerDashboard,\n    meta: { requiresAuth: true, role: 'customer' }\n  },\n  {\n    path: '/technician',\n    name: 'TechnicianDashboard',\n    component: TechnicianDashboard,\n    meta: { requiresAuth: true, role: 'technician' }\n  },\n  {\n    path: '/admin',\n    name: 'AdminDashboard',\n    component: AdminDashboard,\n    meta: { requiresAuth: true, role: 'admin' }\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const requiredRole = to.meta.role;\n  const user = JSON.parse(localStorage.getItem('user') || 'null');\n  const userRole = localStorage.getItem('userRole');\n\n  if (requiresAuth) {\n    if (!user || !userRole) {\n      // 用户未登录，重定向到身份选择页面\n      next('/');\n    } else if (requiredRole && userRole !== requiredRole) {\n      // 用户角色不匹配，重定向到对应的dashboard\n      const dashboardMap = {\n        'customer': '/customer',\n        'technician': '/technician',\n        'admin': '/admin'\n      };\n      next(dashboardMap[userRole] || '/');\n    } else {\n      // 用户已登录且角色匹配\n      next();\n    }\n  } else {\n    // 不需要认证的页面\n    if (user && userRole && (to.path === '/' || to.path.startsWith('/auth'))) {\n      // 已登录用户访问登录页面，重定向到对应dashboard\n      const dashboardMap = {\n        'customer': '/customer',\n        'technician': '/technician',\n        'admin': '/admin'\n      };\n      next(dashboardMap[userRole] || '/');\n    } else {\n      next();\n    }\n  }\n});\n\nexport default router\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,iBAAiB,MAAM,qCAAqC;AACnE,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,OAAOC,cAAc,MAAM,6BAA6B;AAExDN,GAAG,CAACO,GAAG,CAACN,SAAS,CAAC;AAElB,MAAMO,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,mBAAmB;EACzBC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAER,QAAQ;EACnBS,KAAK,EAAE;AACT,CAAC,EACD;EACEH,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,mBAAmB;EACzBC,SAAS,EAAEP,iBAAiB;EAC5BS,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAW;AAC/C,CAAC,EACD;EACEN,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,qBAAqB;EAC3BC,SAAS,EAAEN,mBAAmB;EAC9BQ,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAa;AACjD,CAAC,EACD;EACEN,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEL,cAAc;EACzBO,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ;AAC5C,CAAC,CACF;AAED,MAAMC,MAAM,GAAG,IAAIf,SAAS,CAAC;EAC3BgB,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1Bb;AACF,CAAC,CAAC;;AAEF;AACAQ,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMX,YAAY,GAAGS,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACf,IAAI,CAACC,YAAY,CAAC;EACxE,MAAMe,YAAY,GAAGN,EAAE,CAACV,IAAI,CAACE,IAAI;EACjC,MAAMe,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC;EAC/D,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAEjD,IAAIpB,YAAY,EAAE;IAChB,IAAI,CAACgB,IAAI,IAAI,CAACK,QAAQ,EAAE;MACtB;MACAV,IAAI,CAAC,GAAG,CAAC;IACX,CAAC,MAAM,IAAII,YAAY,IAAIM,QAAQ,KAAKN,YAAY,EAAE;MACpD;MACA,MAAMO,YAAY,GAAG;QACnB,UAAU,EAAE,WAAW;QACvB,YAAY,EAAE,aAAa;QAC3B,OAAO,EAAE;MACX,CAAC;MACDX,IAAI,CAACW,YAAY,CAACD,QAAQ,CAAC,IAAI,GAAG,CAAC;IACrC,CAAC,MAAM;MACL;MACAV,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACL;IACA,IAAIK,IAAI,IAAIK,QAAQ,KAAKZ,EAAE,CAACd,IAAI,KAAK,GAAG,IAAIc,EAAE,CAACd,IAAI,CAAC4B,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE;MACxE;MACA,MAAMD,YAAY,GAAG;QACnB,UAAU,EAAE,WAAW;QACvB,YAAY,EAAE,aAAa;QAC3B,OAAO,EAAE;MACX,CAAC;MACDX,IAAI,CAACW,YAAY,CAACD,QAAQ,CAAC,IAAI,GAAG,CAAC;IACrC,CAAC,MAAM;MACLV,IAAI,CAAC,CAAC;IACR;EACF;AACF,CAAC,CAAC;AAEF,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}