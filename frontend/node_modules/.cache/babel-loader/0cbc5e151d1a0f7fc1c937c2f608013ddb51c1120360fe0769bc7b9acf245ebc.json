{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nexport default {\n  name: 'CustomerDashboard',\n  data() {\n    return {\n      user: null,\n      vehicles: [],\n      repairOrders: [],\n      recentOrders: [],\n      feedbacks: [],\n      completedOrdersWithoutFeedback: [],\n      activeTab: 'dashboard',\n      showUserMenu: false,\n      showAddVehicle: false,\n      showCreateOrder: false,\n      showOrderDetail: false,\n      showFeedback: false,\n      selectedOrder: null,\n      feedbackOrder: null,\n      isSubmitting: false,\n      vehicleForm: {\n        licensePlate: '',\n        brand: '',\n        model: '',\n        year: '',\n        color: '',\n        vin: ''\n      },\n      repairOrderForm: {\n        vehicleId: '',\n        description: '',\n        preferredDate: '',\n        contactPhone: '',\n        requiredSkillType: ''\n      },\n      feedbackForm: {\n        comment: '',\n        rating: 0\n      },\n      profileForm: {\n        name: '',\n        phone: '',\n        email: '',\n        address: ''\n      },\n      statistics: {\n        vehicleCount: 0,\n        repairCount: 0,\n        pendingCount: 0,\n        totalCost: 0\n      }\n    };\n  },\n  computed: {\n    isValidFeedback() {\n      return this.feedbackForm.rating > 0 && this.feedbackForm.comment.trim().length > 0;\n    }\n  },\n  created() {\n    this.loadUserInfo();\n    this.loadData();\n  },\n  methods: {\n    loadUserInfo() {\n      const userData = localStorage.getItem('user');\n      console.log('从localStorage读取用户数据:', userData);\n      if (userData) {\n        this.user = JSON.parse(userData);\n        this.profileForm = {\n          ...this.user\n        };\n        console.log('解析后的用户数据:', this.user);\n        console.log('用户ID:', this.user.id);\n\n        // 检查用户ID是否存在\n        if (!this.user.id) {\n          console.error('用户数据中缺少ID字段:', this.user);\n          this.$emit('message', '用户数据错误，请重新登录', 'error');\n          this.logout();\n          return;\n        }\n        console.log('用户信息加载成功，准备加载相关数据');\n      } else {\n        console.error('localStorage中没有用户数据');\n        this.$emit('message', '未找到用户信息，请重新登录', 'error');\n        this.logout();\n      }\n    },\n    async loadData() {\n      try {\n        await Promise.all([this.loadVehicles(), this.loadRepairOrders(), this.loadFeedbacks()]);\n        this.calculateStatistics();\n      } catch (error) {\n        console.error('加载数据失败:', error);\n        this.$emit('message', '加载数据失败', 'error');\n      }\n    },\n    async loadVehicles() {\n      try {\n        console.log('开始加载车辆数据，用户ID:', this.user.id);\n        const response = await this.$axios.get(`/vehicles/user/${this.user.id}`);\n        console.log('车辆API响应:', response.data);\n        if (Array.isArray(response.data)) {\n          this.vehicles = response.data;\n          console.log('成功设置车辆数据，共', this.vehicles.length, '辆车');\n          this.vehicles.forEach((vehicle, index) => {\n            console.log(`车辆${index + 1}:`, {\n              id: vehicle.id,\n              licensePlate: vehicle.licensePlate,\n              brand: vehicle.brand,\n              model: vehicle.model,\n              repairOrders: vehicle.repairOrders?.length || 0\n            });\n          });\n\n          // 更新统计信息\n          this.calculateStatistics();\n        } else {\n          console.error('API返回的数据不是数组:', response.data);\n          this.vehicles = [];\n        }\n      } catch (error) {\n        console.error('加载车辆失败:', error);\n        console.error('错误详情:', error.response?.data);\n        this.$emit('message', `加载车辆失败: ${error.response?.data?.message || error.message}`, 'error');\n        this.vehicles = [];\n      }\n    },\n    async loadRepairOrders() {\n      try {\n        console.log('开始加载维修记录，用户ID:', this.user.id);\n        const response = await this.$axios.get(`/repair-orders/user/${this.user.id}`);\n        console.log('维修记录API响应:', response.data);\n        this.repairOrders = response.data || [];\n        this.recentOrders = this.repairOrders.slice(0, 5);\n        console.log('设置维修记录数据:', this.repairOrders);\n\n        // 检查每条记录的车辆信息\n        this.repairOrders.forEach((order, index) => {\n          console.log(`维修记录${index + 1}:`, {\n            id: order.id,\n            vehicleId: order.vehicleId,\n            vehicle: order.vehicle,\n            vehicleLicensePlate: order.vehicle?.licensePlate\n          });\n        });\n        if (this.repairOrders.length === 0) {\n          console.log('没有找到维修记录');\n        } else {\n          console.log(`成功加载 ${this.repairOrders.length} 条维修记录`);\n        }\n      } catch (error) {\n        console.error('加载维修记录失败:', error);\n        console.error('错误详情:', error.response?.data);\n        this.$emit('message', `加载维修记录失败: ${error.response?.data?.message || error.message}`, 'error');\n      }\n    },\n    async loadFeedbacks() {\n      try {\n        const response = await this.$axios.get(`/feedbacks/user/${this.user.id}`);\n        this.feedbacks = response.data;\n        this.completedOrdersWithoutFeedback = this.repairOrders.filter(order => order.status === 'COMPLETED' && !this.hasUserFeedback(order));\n      } catch (error) {\n        console.error('加载反馈失败:', error);\n      }\n    },\n    calculateStatistics() {\n      this.statistics = {\n        vehicleCount: this.vehicles.length,\n        repairCount: this.repairOrders.length,\n        pendingCount: this.repairOrders.filter(order => order.status === 'PENDING' || order.status === 'IN_PROGRESS' || order.status === 'ASSIGNED').length,\n        totalCost: this.formatCurrency(this.repairOrders.reduce((sum, order) => sum + (order.totalCost || order.laborCost + order.materialCost || 0), 0))\n      };\n\n      // 调试信息\n      console.log('所有维修订单:', this.repairOrders);\n      console.log('已完成订单:', this.repairOrders.filter(order => order.status === 'COMPLETED'));\n      console.log('所有反馈:', this.feedbacks);\n\n      // 更新可反馈的维修单列表\n      this.completedOrdersWithoutFeedback = this.repairOrders.filter(order => order.status === 'COMPLETED' && !this.hasUserFeedback(order));\n      console.log('可反馈的订单:', this.completedOrdersWithoutFeedback);\n    },\n    formatCurrency(amount) {\n      return Math.round((amount || 0) * 100) / 100;\n    },\n    toggleUserMenu() {\n      this.showUserMenu = !this.showUserMenu;\n    },\n    async addVehicle() {\n      try {\n        this.isSubmitting = true;\n        const vehicleData = {\n          licensePlate: this.vehicleForm.licensePlate,\n          brand: this.vehicleForm.brand,\n          model: this.vehicleForm.model,\n          year: parseInt(this.vehicleForm.year),\n          color: this.vehicleForm.color,\n          vin: this.vehicleForm.vin,\n          userId: this.user.id\n        };\n        const response = await this.$axios.post('/vehicles', vehicleData);\n        this.vehicles.push(response.data);\n        this.showAddVehicle = false;\n        this.vehicleForm = {\n          licensePlate: '',\n          brand: '',\n          model: '',\n          year: '',\n          color: '',\n          vin: ''\n        };\n        this.calculateStatistics();\n        this.$emit('message', '车辆添加成功', 'success');\n      } catch (error) {\n        console.error('添加车辆失败:', error);\n        const errorMessage = error.response?.data?.message || error.message || '添加车辆失败';\n        this.$emit('message', errorMessage, 'error');\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    async updateProfile() {\n      try {\n        // 检查用户ID是否存在\n        if (!this.user.id) {\n          throw new Error('用户ID不存在，请重新登录');\n        }\n        console.log('更新用户资料，用户ID:', this.user.id);\n\n        // 构建完整的用户更新请求数据\n        const updateData = {\n          username: this.user.username,\n          // 保持原用户名\n          password: this.user.password || '',\n          // 如果没有密码字段，发送空字符串\n          name: this.profileForm.name,\n          phone: this.profileForm.phone,\n          email: this.profileForm.email,\n          address: this.profileForm.address,\n          vehicles: this.user.vehicles || [],\n          repairOrders: this.user.repairOrders || []\n        };\n        console.log('发送的更新数据:', updateData);\n        const response = await this.$axios.put(`/users/${this.user.id}`, updateData);\n        this.user = {\n          ...this.user,\n          ...response.data\n        };\n        this.profileForm = {\n          ...this.user\n        };\n        localStorage.setItem('user', JSON.stringify(this.user));\n        this.$emit('message', '个人资料更新成功', 'success');\n      } catch (error) {\n        console.error('更新资料失败:', error);\n        const errorMessage = error.response?.data?.message || error.message || '更新资料失败';\n        this.$emit('message', errorMessage, 'error');\n      }\n    },\n    getStatusText(status) {\n      const statusMap = {\n        'PENDING': '待处理',\n        'IN_PROGRESS': '进行中',\n        'COMPLETED': '已完成',\n        'CANCELLED': '已取消'\n      };\n      return statusMap[status] || status;\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('zh-CN');\n    },\n    editVehicle(vehicle) {\n      // 实现编辑车辆功能\n      this.$emit('message', '编辑功能开发中', 'info');\n    },\n    async deleteVehicle(vehicleId) {\n      if (confirm('确定要删除这辆车吗？')) {\n        try {\n          await this.$axios.delete(`/vehicles/${vehicleId}`);\n          this.loadVehicles();\n          this.$emit('message', '车辆删除成功', 'success');\n        } catch (error) {\n          console.error('删除车辆失败:', error);\n          this.$emit('message', '删除车辆失败', 'error');\n        }\n      }\n    },\n    createRepairOrder(vehicle) {\n      console.log('开始创建维修单，车辆信息:', vehicle);\n      if (!vehicle || !vehicle.id) {\n        console.error('车辆信息无效:', vehicle);\n        this.$emit('message', '车辆信息无效，无法预约维修', 'error');\n        return;\n      }\n      this.repairOrderForm.vehicleId = vehicle.id;\n      this.repairOrderForm.contactPhone = this.user.phone || '';\n      console.log('设置维修单表单:', this.repairOrderForm);\n      this.showCreateOrder = true;\n    },\n    async submitRepairOrder() {\n      try {\n        this.isSubmitting = true;\n        const orderData = {\n          orderNumber: `RO${Date.now()}`,\n          // 生成订单号\n          status: 'PENDING',\n          description: this.repairOrderForm.description,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n          completedAt: null,\n          laborCost: 0,\n          materialCost: 0,\n          totalCost: 0,\n          userId: this.user.id,\n          vehicleId: this.repairOrderForm.vehicleId,\n          technicianIds: [],\n          requiredSkillType: this.repairOrderForm.requiredSkillType\n        };\n        const response = await this.$axios.post('/repair-orders', orderData);\n        this.repairOrders.push(response.data);\n        this.showCreateOrder = false;\n        this.repairOrderForm = {\n          vehicleId: '',\n          description: '',\n          preferredDate: '',\n          contactPhone: '',\n          requiredSkillType: ''\n        };\n        this.calculateStatistics();\n        this.$emit('message', '预约维修成功', 'success');\n      } catch (error) {\n        console.error('预约维修失败:', error);\n        const errorMessage = error.response?.data?.message || error.message || '预约维修失败';\n        this.$emit('message', errorMessage, 'error');\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    viewOrderDetail(order) {\n      this.selectedOrder = order;\n      this.showOrderDetail = true;\n    },\n    addFeedback(order) {\n      this.openFeedbackModal(order);\n    },\n    openFeedbackModal(order) {\n      this.feedbackOrder = order;\n      this.feedbackForm = {\n        comment: '',\n        rating: 0\n      };\n      this.showFeedback = true;\n    },\n    async submitFeedback() {\n      try {\n        if (!this.isValidFeedback) {\n          this.$emit('message', '请至少填写评分和评价内容', 'warning');\n          return;\n        }\n        this.isSubmitting = true;\n        const feedbackData = {\n          rating: this.feedbackForm.rating,\n          comment: this.feedbackForm.comment,\n          createdAt: new Date(),\n          repairOrderId: this.feedbackOrder.id,\n          userId: this.user.id\n        };\n        const response = await this.$axios.post('/feedbacks', feedbackData);\n        this.feedbacks.push(response.data);\n        this.showFeedback = false;\n        this.feedbackForm = {\n          comment: '',\n          rating: 0\n        };\n        this.feedbackOrder = null;\n\n        // 重新计算统计数据，更新可反馈的订单列表\n        this.calculateStatistics();\n        this.$emit('message', '反馈提交成功', 'success');\n      } catch (error) {\n        console.error('提交反馈失败:', error);\n        const errorMessage = error.response?.data?.message || error.message || '提交反馈失败';\n        this.$emit('message', errorMessage, 'error');\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    hasUserFeedback(order) {\n      return this.feedbacks.some(feedback => feedback.repairOrder && feedback.repairOrder.id === order.id);\n    },\n    getSkillTypeName(skillType) {\n      const skillMap = {\n        'MECHANIC': '机械维修',\n        'ELECTRICIAN': '电气维修',\n        'BODY_WORK': '车身维修',\n        'PAINT': '喷漆',\n        'DIAGNOSTIC': '诊断'\n      };\n      return skillMap[skillType] || skillType;\n    },\n    getVehicleDisplay(order) {\n      // 首先尝试从订单中获取车辆信息\n      if (order.vehicle && order.vehicle.licensePlate) {\n        return `${order.vehicle.licensePlate} - ${order.vehicle.brand} ${order.vehicle.model}`;\n      }\n\n      // 如果订单中没有车辆信息，尝试通过vehicleId在vehicles数组中查找\n      const vehicleId = order.vehicleId || order.vehicle && order.vehicle.id;\n      if (vehicleId && this.vehicles.length > 0) {\n        const vehicle = this.vehicles.find(v => v.id === vehicleId);\n        if (vehicle) {\n          return `${vehicle.licensePlate} - ${vehicle.brand} ${vehicle.model}`;\n        }\n      }\n      return `未知车辆 (ID: ${vehicleId || 'null'})`;\n    },\n    logout() {\n      localStorage.removeItem('user');\n      localStorage.removeItem('userRole');\n      this.$router.push('/');\n    },\n    getRatingText(rating) {\n      const texts = ['请评分', '很差', '一般', '满意', '不错', '非常满意'];\n      return texts[rating] || texts[0];\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","vehicles","repairOrders","recentOrders","feedbacks","completedOrdersWithoutFeedback","activeTab","showUserMenu","showAddVehicle","showCreateOrder","showOrderDetail","showFeedback","selectedOrder","feedbackOrder","isSubmitting","vehicleForm","licensePlate","brand","model","year","color","vin","repairOrderForm","vehicleId","description","preferredDate","contactPhone","requiredSkillType","feedbackForm","comment","rating","profileForm","phone","email","address","statistics","vehicleCount","repairCount","pendingCount","totalCost","computed","isValidFeedback","trim","length","created","loadUserInfo","loadData","methods","userData","localStorage","getItem","console","log","JSON","parse","id","error","$emit","logout","Promise","all","loadVehicles","loadRepairOrders","loadFeedbacks","calculateStatistics","response","$axios","get","Array","isArray","forEach","vehicle","index","message","slice","order","vehicleLicensePlate","filter","status","hasUserFeedback","formatCurrency","reduce","sum","laborCost","materialCost","amount","Math","round","toggleUserMenu","addVehicle","vehicleData","parseInt","userId","post","push","errorMessage","updateProfile","Error","updateData","username","password","put","setItem","stringify","getStatusText","statusMap","formatDate","dateString","Date","toLocaleDateString","editVehicle","deleteVehicle","confirm","delete","createRepairOrder","submitRepairOrder","orderData","orderNumber","now","createdAt","updatedAt","completedAt","technicianIds","viewOrderDetail","addFeedback","openFeedbackModal","submitFeedback","feedbackData","repairOrderId","some","feedback","repairOrder","getSkillTypeName","skillType","skillMap","getVehicleDisplay","find","v","removeItem","$router","getRatingText","texts"],"sources":["src/views/CustomerDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"customer-dashboard\">\n    <!-- 顶部导航栏 -->\n    <header class=\"dashboard-header\">\n      <div class=\"header-left\">\n        <div class=\"logo\">\n          <i class=\"fas fa-car\"></i>\n          <span>维修系统</span>\n        </div>\n        <nav class=\"nav-menu\">\n          <a href=\"#\" @click=\"activeTab = 'overview'\" :class=\"{ active: activeTab === 'overview' }\">\n            <i class=\"fas fa-home\"></i> 概览\n          </a>\n          <a href=\"#\" @click=\"activeTab = 'vehicles'\" :class=\"{ active: activeTab === 'vehicles' }\">\n            <i class=\"fas fa-car\"></i> 我的车辆\n          </a>\n          <a href=\"#\" @click=\"activeTab = 'orders'\" :class=\"{ active: activeTab === 'orders' }\">\n            <i class=\"fas fa-wrench\"></i> 维修记录\n          </a>\n          <a href=\"#\" @click=\"activeTab = 'feedback'\" :class=\"{ active: activeTab === 'feedback' }\">\n            <i class=\"fas fa-comment\"></i> 反馈\n          </a>\n        </nav>\n      </div>\n      <div class=\"header-right\">\n        <div class=\"user-menu\" @click=\"toggleUserMenu\">\n          <div class=\"user-avatar\">\n            <i class=\"fas fa-user\"></i>\n          </div>\n          <span class=\"user-name\">{{ user.name || user.username }}</span>\n          <i class=\"fas fa-chevron-down\"></i>\n        </div>\n        <div v-if=\"showUserMenu\" class=\"user-dropdown\">\n          <a href=\"#\" @click=\"activeTab = 'profile'\">\n            <i class=\"fas fa-user-edit\"></i> 个人资料\n          </a>\n          <a href=\"#\" @click=\"logout\">\n            <i class=\"fas fa-sign-out-alt\"></i> 登出\n          </a>\n        </div>\n      </div>\n    </header>\n\n    <!-- 主内容区域 -->\n    <main class=\"dashboard-main\">\n      <!-- 概览页面 -->\n      <div v-if=\"activeTab === 'overview'\" class=\"tab-content\">\n        <div class=\"welcome-section\">\n          <h1>欢迎回来，{{ user.name || user.username }}！</h1>\n          <p>管理您的车辆和维修服务</p>\n        </div>\n\n        <!-- 统计卡片 -->\n        <div class=\"stats-grid\">\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <i class=\"fas fa-car\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ statistics.vehicleCount }}</h3>\n              <p>我的车辆</p>\n            </div>\n          </div>\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <i class=\"fas fa-wrench\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ statistics.repairCount }}</h3>\n              <p>维修次数</p>\n            </div>\n          </div>\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <i class=\"fas fa-clock\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ statistics.pendingCount }}</h3>\n              <p>待处理</p>\n            </div>\n          </div>\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <i class=\"fas fa-dollar-sign\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>¥{{ formatCurrency(statistics.totalCost) }}</h3>\n              <p>总费用</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- 快速操作 -->\n        <div class=\"quick-actions\">\n          <h2>快速操作</h2>\n          <div class=\"action-grid\">\n            <button class=\"action-card\" @click=\"activeTab = 'vehicles'\">\n              <i class=\"fas fa-plus-circle\"></i>\n              <span>添加车辆</span>\n            </button>\n            <button class=\"action-card\" @click=\"activeTab = 'orders'\">\n              <i class=\"fas fa-calendar-plus\"></i>\n              <span>预约维修</span>\n            </button>\n            <button class=\"action-card\" @click=\"activeTab = 'orders'\">\n              <i class=\"fas fa-history\"></i>\n              <span>查看记录</span>\n            </button>\n            <button class=\"action-card\" @click=\"activeTab = 'feedback'\">\n              <i class=\"fas fa-star\"></i>\n              <span>评价反馈</span>\n            </button>\n          </div>\n        </div>\n\n        <!-- 最近维修记录 -->\n        <div class=\"recent-section\">\n          <h2>最近维修记录</h2>\n          <div class=\"recent-orders\">\n            <div v-if=\"recentOrders.length === 0\" class=\"empty-state\">\n              <i class=\"fas fa-inbox\"></i>\n              <p>暂无维修记录</p>\n            </div>\n            <div v-for=\"order in recentOrders\" :key=\"order.id\" class=\"order-item\">\n              <div class=\"order-info\">\n                <h4>{{ getVehicleDisplay(order) }}</h4>\n                <p>{{ order.description }}</p>\n                <small>{{ formatDate(order.createdAt) }}</small>\n              </div>\n              <div class=\"order-status\">\n                <span :class=\"['status', order.status.toLowerCase()]\">\n                  {{ getStatusText(order.status) }}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 车辆管理页面 -->\n      <div v-if=\"activeTab === 'vehicles'\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>我的车辆</h2>\n          <button @click=\"showAddVehicle = true\" class=\"btn btn-primary\">\n            <i class=\"fas fa-plus\"></i> 添加车辆\n          </button>\n        </div>\n        \n        <div class=\"vehicles-grid\">\n          <div v-if=\"vehicles.length === 0\" class=\"empty-state\">\n            <i class=\"fas fa-car\"></i>\n            <h3>还没有车辆</h3>\n            <p>添加您的第一辆车开始管理</p>\n            <button @click=\"showAddVehicle = true\" class=\"btn btn-primary\">\n              <i class=\"fas fa-plus\"></i> 添加车辆\n            </button>\n          </div>\n          <div v-for=\"vehicle in vehicles\" :key=\"vehicle.id\" class=\"vehicle-card\">\n            <div class=\"vehicle-header\">\n              <h3>{{ vehicle.licensePlate || '未知车牌' }}</h3>\n              <div class=\"vehicle-actions\">\n                <button @click=\"editVehicle(vehicle)\" class=\"btn-icon\">\n                  <i class=\"fas fa-edit\"></i>\n                </button>\n                <button @click=\"deleteVehicle(vehicle.id)\" class=\"btn-icon danger\">\n                  <i class=\"fas fa-trash\"></i>\n                </button>\n              </div>\n            </div>\n            <div class=\"vehicle-info\">\n              <p><strong>品牌:</strong> {{ vehicle.brand || '未知' }}</p>\n              <p><strong>车型:</strong> {{ vehicle.model || '未知' }}</p>\n              <p><strong>年份:</strong> {{ vehicle.year || '未知' }}</p>\n              <p><strong>颜色:</strong> {{ vehicle.color || '未设置' }}</p>\n              <p><strong>维修次数:</strong> {{ (vehicle.repairOrders && vehicle.repairOrders.length) || 0 }}</p>\n            </div>\n            <button @click=\"createRepairOrder(vehicle)\" class=\"btn btn-outline\">\n              <i class=\"fas fa-wrench\"></i> 预约维修\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 维修记录页面 -->\n      <div v-if=\"activeTab === 'orders'\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>维修记录</h2>\n          <button @click=\"showCreateOrder = true\" class=\"btn btn-primary\">\n            <i class=\"fas fa-plus\"></i> 新建维修单\n          </button>\n        </div>\n\n        <div class=\"orders-container\">\n          <div v-if=\"repairOrders.length === 0\" class=\"empty-state\">\n            <i class=\"fas fa-wrench\"></i>\n            <h3>暂无维修记录</h3>\n            <p>预约您的第一次维修服务</p>\n            <button @click=\"showCreateOrder = true\" class=\"btn btn-primary\">\n              <i class=\"fas fa-plus\"></i> 预约维修\n            </button>\n          </div>\n          <div v-for=\"order in repairOrders\" :key=\"order.id\" class=\"order-card\">\n            <div class=\"order-header\">\n              <div>\n                <h3>维修单 #{{ order.id }}</h3>\n                <p class=\"order-vehicle\">{{ getVehicleDisplay(order) }}</p>\n              </div>\n              <span :class=\"['status-badge', order.status.toLowerCase()]\">\n                {{ getStatusText(order.status) }}\n              </span>\n            </div>\n            <div class=\"order-body\">\n              <p><strong>故障描述:</strong> {{ order.description }}</p>\n              <p><strong>开始时间:</strong> {{ formatDate(order.createdAt) }}</p>\n              <p><strong>预估费用:</strong> ¥{{ (order.laborCost || 0) + (order.materialCost || 0) }}</p>\n              <p v-if=\"order.totalCost\"><strong>实际费用:</strong> ¥{{ order.totalCost }}</p>\n            </div>\n            <div class=\"order-footer\">\n              <button v-if=\"order.status === 'COMPLETED'\" @click=\"addFeedback(order)\" class=\"btn btn-outline\">\n                <i class=\"fas fa-star\"></i> 评价\n              </button>\n              <button @click=\"viewOrderDetail(order)\" class=\"btn btn-primary\">\n                <i class=\"fas fa-eye\"></i> 查看详情\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 反馈页面 -->\n      <div v-if=\"activeTab === 'feedback'\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>我的反馈</h2>\n        </div>\n        \n        <div class=\"feedback-container\">\n          <div v-if=\"completedOrdersWithoutFeedback.length === 0\" class=\"empty-state\">\n            <i class=\"fas fa-comments\"></i>\n            <h3>暂无待评价订单</h3>\n            <p>完成维修后可以提交反馈</p>\n          </div>\n          \n          <!-- 显示可反馈的维修单 -->\n          <div v-for=\"order in completedOrdersWithoutFeedback\" :key=\"'order-' + order.id\" class=\"feedback-prompt\">\n            <div class=\"feedback-header\">\n              <small>{{ formatDate(order.completedAt || order.createdAt) }}</small>\n            </div>\n            <p class=\"feedback-prompt-text\">维修单 #{{ order.id }} 等待您的评价</p>\n            <button @click=\"openFeedbackModal(order)\" class=\"btn btn-outline\">\n              <i class=\"fas fa-star\"></i> 立即评价\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 个人资料页面 -->\n      <div v-if=\"activeTab === 'profile'\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>个人资料</h2>\n        </div>\n        \n        <div class=\"profile-container\">\n          <form @submit.prevent=\"updateProfile\" class=\"profile-form\">\n            <div class=\"form-group\">\n              <label class=\"form-label\">姓名</label>\n              <input v-model=\"profileForm.name\" class=\"form-input\" required>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">用户名</label>\n              <input v-model=\"profileForm.username\" class=\"form-input\" disabled>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">电话</label>\n              <input v-model=\"profileForm.phone\" class=\"form-input\" required>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">邮箱</label>\n              <input v-model=\"profileForm.email\" type=\"email\" class=\"form-input\" required>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">地址</label>\n              <input v-model=\"profileForm.address\" class=\"form-input\" required>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">\n              <i class=\"fas fa-save\"></i> 保存更改\n            </button>\n          </form>\n        </div>\n      </div>\n    </main>\n\n    <!-- 添加车辆模态框 -->\n    <div v-if=\"showAddVehicle\" class=\"modal-overlay\" @click=\"showAddVehicle = false\">\n      <div class=\"modal\" @click.stop>\n        <div class=\"modal-header\">\n          <h3>添加车辆</h3>\n          <button @click=\"showAddVehicle = false\" class=\"modal-close\">&times;</button>\n        </div>\n        <form @submit.prevent=\"addVehicle\" class=\"modal-body\">\n          <div class=\"form-group\">\n            <label class=\"form-label\">车牌号 <span class=\"required\">*</span></label>\n            <input v-model=\"vehicleForm.licensePlate\" class=\"form-input\" placeholder=\"例：京A12345\" required>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">品牌 <span class=\"required\">*</span></label>\n            <input v-model=\"vehicleForm.brand\" class=\"form-input\" placeholder=\"例：大众\" required>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">车型 <span class=\"required\">*</span></label>\n            <input v-model=\"vehicleForm.model\" class=\"form-input\" placeholder=\"例：速腾\" required>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">年份 <span class=\"required\">*</span></label>\n            <input v-model=\"vehicleForm.year\" type=\"number\" min=\"1980\" :max=\"new Date().getFullYear()\" class=\"form-input\" required>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">颜色</label>\n            <input v-model=\"vehicleForm.color\" class=\"form-input\" placeholder=\"例：白色\">\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">车架号</label>\n            <input v-model=\"vehicleForm.vin\" class=\"form-input\" placeholder=\"17位车架号\">\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" @click=\"showAddVehicle = false\" class=\"btn btn-outline\">\n              取消\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isSubmitting\">\n              <i class=\"fas fa-plus\"></i> {{ isSubmitting ? '添加中...' : '添加车辆' }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <!-- 预约维修模态框 -->\n    <div v-if=\"showCreateOrder\" class=\"modal-overlay\" @click=\"showCreateOrder = false\">\n      <div class=\"modal large\" @click.stop>\n        <div class=\"modal-header\">\n          <h3>预约维修</h3>\n          <button @click=\"showCreateOrder = false\" class=\"modal-close\">&times;</button>\n        </div>\n        <form @submit.prevent=\"submitRepairOrder\" class=\"modal-body\">\n          <div class=\"form-group\">\n            <label class=\"form-label\">选择车辆 <span class=\"required\">*</span></label>\n            <select v-model=\"repairOrderForm.vehicleId\" class=\"form-input\" required>\n              <option value=\"\">请选择车辆</option>\n              <option v-for=\"vehicle in vehicles\" :key=\"vehicle.id\" :value=\"vehicle.id\">\n                {{ vehicle.licensePlate }} - {{ vehicle.brand }} {{ vehicle.model }}\n              </option>\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">故障描述 <span class=\"required\">*</span></label>\n            <textarea v-model=\"repairOrderForm.description\" class=\"form-input\" rows=\"4\" \n                      placeholder=\"请详细描述车辆故障情况，如：发动机异响、刹车片磨损等\" required></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">维修类型 <span class=\"required\">*</span></label>\n            <select v-model=\"repairOrderForm.requiredSkillType\" class=\"form-input\" required>\n              <option value=\"\">请选择维修类型</option>\n              <option value=\"MECHANIC\">机械维修</option>\n              <option value=\"ELECTRICIAN\">电气维修</option>\n              <option value=\"BODY_WORK\">车身维修</option>\n              <option value=\"PAINT\">喷漆</option>\n              <option value=\"DIAGNOSTIC\">故障诊断</option>\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">预约时间</label>\n            <input v-model=\"repairOrderForm.preferredDate\" type=\"datetime-local\" class=\"form-input\"\n                   :min=\"new Date().toISOString().slice(0, 16)\">\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">联系方式</label>\n            <input v-model=\"repairOrderForm.contactPhone\" type=\"tel\" class=\"form-input\" \n                   :placeholder=\"user.phone\">\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" @click=\"showCreateOrder = false\" class=\"btn btn-outline\">\n              取消\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isSubmitting\">\n              <i class=\"fas fa-calendar-plus\"></i> {{ isSubmitting ? '提交中...' : '提交预约' }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <!-- 维修详情模态框 -->\n    <div v-if=\"showOrderDetail\" class=\"modal-overlay\" @click=\"showOrderDetail = false\">\n      <div class=\"modal large\" @click.stop>\n        <div class=\"modal-header\">\n          <h3>维修单详情</h3>\n          <button @click=\"showOrderDetail = false\" class=\"modal-close\">&times;</button>\n        </div>\n        <div class=\"modal-body\" v-if=\"selectedOrder\">\n          <div class=\"detail-section\">\n            <h4>基本信息</h4>\n            <div class=\"detail-grid\">\n              <div class=\"detail-item\">\n                <span class=\"detail-label\">维修单号:</span>\n                <span class=\"detail-value\">#{{ selectedOrder.id }}</span>\n              </div>\n              <div class=\"detail-item\">\n                <span class=\"detail-label\">状态:</span>\n                <span :class=\"['status-badge', selectedOrder.status.toLowerCase()]\">\n                  {{ getStatusText(selectedOrder.status) }}\n                </span>\n              </div>\n              <div class=\"detail-item\">\n                <span class=\"detail-label\">车辆:</span>\n                <span class=\"detail-value\">{{ getVehicleDisplay(selectedOrder) }}</span>\n              </div>\n              <div class=\"detail-item\">\n                <span class=\"detail-label\">创建时间:</span>\n                <span class=\"detail-value\">{{ formatDate(selectedOrder.createdAt) }}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"detail-section\">\n            <h4>故障描述</h4>\n            <p class=\"fault-description\">{{ selectedOrder.description }}</p>\n          </div>\n\n          <div class=\"detail-section\" v-if=\"selectedOrder.technicians && selectedOrder.technicians.length > 0\">\n            <h4>负责技师</h4>\n            <div class=\"technician-list\">\n              <div v-for=\"tech in selectedOrder.technicians\" :key=\"tech.id\" class=\"technician-item\">\n                <div class=\"tech-avatar\">\n                  <i class=\"fas fa-user-hard-hat\"></i>\n                </div>\n                <div class=\"tech-info\">\n                  <span class=\"tech-name\">{{ tech.name }}</span>\n                  <span class=\"tech-skill\">{{ getSkillTypeName(tech.skillType) }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"detail-section\">\n            <h4>费用信息</h4>\n            <div class=\"cost-breakdown\">\n              <div class=\"cost-item\">\n                <span>人工费:</span>\n                <span>¥{{ selectedOrder.laborCost || 0 }}</span>\n              </div>\n              <div class=\"cost-item\">\n                <span>材料费:</span>\n                <span>¥{{ selectedOrder.materialCost || 0 }}</span>\n              </div>\n              <div class=\"cost-item total\">\n                <span>总计:</span>\n                <span>¥{{ selectedOrder.totalCost || selectedOrder.laborCost + selectedOrder.materialCost || 0 }}</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"modal-footer\">\n            <button v-if=\"selectedOrder.status === 'COMPLETED' && !hasUserFeedback(selectedOrder)\" \n                    @click=\"openFeedbackModal(selectedOrder)\" class=\"btn btn-primary\">\n              <i class=\"fas fa-star\"></i> 评价服务\n            </button>\n            <button @click=\"showOrderDetail = false\" class=\"btn btn-outline\">\n              关闭\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 评价反馈模态框 -->\n    <div v-if=\"showFeedback\" class=\"modal-overlay\" @click=\"showFeedback = false\">\n      <div class=\"modal\" @click.stop>\n        <div class=\"modal-header\">\n          <h3>评价服务</h3>\n          <button @click=\"showFeedback = false\" class=\"modal-close\">&times;</button>\n        </div>\n        <form @submit.prevent=\"submitFeedback\" class=\"modal-body\" v-if=\"feedbackOrder\">\n          <div class=\"feedback-order-info\">\n            <h4>维修单 #{{ feedbackOrder.id }}</h4>\n            <p>{{ getVehicleDisplay(feedbackOrder) }} - {{ feedbackOrder.description }}</p>\n          </div>\n          \n          <!-- 服务满意度评分 -->\n          <div class=\"form-group\">\n            <label class=\"form-label\">服务满意度</label>\n            <div class=\"rating-container\">\n              <div class=\"star-rating\">\n                <span \n                  v-for=\"star in 5\" \n                  :key=\"star\" \n                  class=\"star\" \n                  :class=\"{ 'active': star <= feedbackForm.rating }\" \n                  @click=\"feedbackForm.rating = star\"\n                >\n                  <i class=\"fas fa-star\"></i>\n                </span>\n              </div>\n              <span class=\"rating-text\">{{ getRatingText(feedbackForm.rating) }}</span>\n            </div>\n          </div>\n          \n          <div class=\"form-group\">\n            <label class=\"form-label\">评价内容</label>\n            <textarea v-model=\"feedbackForm.comment\" class=\"form-input\" rows=\"4\" \n                      placeholder=\"请分享您对本次维修服务的感受和建议...\"></textarea>\n          </div>\n          \n          <div class=\"modal-footer\">\n            <button type=\"button\" @click=\"showFeedback = false\" class=\"btn btn-outline\">\n              取消\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isSubmitting || !isValidFeedback\">\n              <i class=\"fas fa-paper-plane\"></i> {{ isSubmitting ? '提交中...' : '提交评价' }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CustomerDashboard',\n  data() {\n    return {\n      user: null,\n      vehicles: [],\n      repairOrders: [],\n      recentOrders: [],\n      feedbacks: [],\n      completedOrdersWithoutFeedback: [],\n      activeTab: 'dashboard',\n      showUserMenu: false,\n      showAddVehicle: false,\n      showCreateOrder: false,\n      showOrderDetail: false,\n      showFeedback: false,\n      selectedOrder: null,\n      feedbackOrder: null,\n      isSubmitting: false,\n      vehicleForm: {\n        licensePlate: '',\n        brand: '',\n        model: '',\n        year: '',\n        color: '',\n        vin: ''\n      },\n      repairOrderForm: {\n        vehicleId: '',\n        description: '',\n        preferredDate: '',\n        contactPhone: '',\n        requiredSkillType: ''\n      },\n      feedbackForm: {\n        comment: '',\n        rating: 0\n      },\n      profileForm: {\n        name: '',\n        phone: '',\n        email: '',\n        address: ''\n      },\n      statistics: {\n        vehicleCount: 0,\n        repairCount: 0,\n        pendingCount: 0,\n        totalCost: 0\n      }\n    }\n  },\n  computed: {\n    isValidFeedback() {\n      return this.feedbackForm.rating > 0 && this.feedbackForm.comment.trim().length > 0;\n    }\n  },\n  created() {\n    this.loadUserInfo();\n    this.loadData();\n  },\n  methods: {\n    loadUserInfo() {\n      const userData = localStorage.getItem('user');\n      console.log('从localStorage读取用户数据:', userData);\n      \n      if (userData) {\n        this.user = JSON.parse(userData);\n        this.profileForm = { ...this.user };\n        console.log('解析后的用户数据:', this.user);\n        console.log('用户ID:', this.user.id);\n        \n        // 检查用户ID是否存在\n        if (!this.user.id) {\n          console.error('用户数据中缺少ID字段:', this.user);\n          this.$emit('message', '用户数据错误，请重新登录', 'error');\n          this.logout();\n          return;\n        }\n        \n        console.log('用户信息加载成功，准备加载相关数据');\n      } else {\n        console.error('localStorage中没有用户数据');\n        this.$emit('message', '未找到用户信息，请重新登录', 'error');\n        this.logout();\n      }\n    },\n    async loadData() {\n      try {\n        await Promise.all([\n          this.loadVehicles(),\n          this.loadRepairOrders(),\n          this.loadFeedbacks()\n        ]);\n        this.calculateStatistics();\n      } catch (error) {\n        console.error('加载数据失败:', error);\n        this.$emit('message', '加载数据失败', 'error');\n      }\n    },\n    async loadVehicles() {\n      try {\n        console.log('开始加载车辆数据，用户ID:', this.user.id);\n        const response = await this.$axios.get(`/vehicles/user/${this.user.id}`);\n        console.log('车辆API响应:', response.data);\n        \n        if (Array.isArray(response.data)) {\n          this.vehicles = response.data;\n          console.log('成功设置车辆数据，共', this.vehicles.length, '辆车');\n          this.vehicles.forEach((vehicle, index) => {\n            console.log(`车辆${index + 1}:`, {\n              id: vehicle.id,\n              licensePlate: vehicle.licensePlate,\n              brand: vehicle.brand,\n              model: vehicle.model,\n              repairOrders: vehicle.repairOrders?.length || 0\n            });\n          });\n          \n          // 更新统计信息\n          this.calculateStatistics();\n        } else {\n          console.error('API返回的数据不是数组:', response.data);\n          this.vehicles = [];\n        }\n      } catch (error) {\n        console.error('加载车辆失败:', error);\n        console.error('错误详情:', error.response?.data);\n        this.$emit('message', `加载车辆失败: ${error.response?.data?.message || error.message}`, 'error');\n        this.vehicles = [];\n      }\n    },\n    async loadRepairOrders() {\n      try {\n        console.log('开始加载维修记录，用户ID:', this.user.id);\n        const response = await this.$axios.get(`/repair-orders/user/${this.user.id}`);\n        console.log('维修记录API响应:', response.data);\n        \n        this.repairOrders = response.data || [];\n        this.recentOrders = this.repairOrders.slice(0, 5);\n        \n        console.log('设置维修记录数据:', this.repairOrders);\n        \n        // 检查每条记录的车辆信息\n        this.repairOrders.forEach((order, index) => {\n          console.log(`维修记录${index + 1}:`, {\n            id: order.id,\n            vehicleId: order.vehicleId,\n            vehicle: order.vehicle,\n            vehicleLicensePlate: order.vehicle?.licensePlate\n          });\n        });\n        \n        if (this.repairOrders.length === 0) {\n          console.log('没有找到维修记录');\n        } else {\n          console.log(`成功加载 ${this.repairOrders.length} 条维修记录`);\n        }\n      } catch (error) {\n        console.error('加载维修记录失败:', error);\n        console.error('错误详情:', error.response?.data);\n        this.$emit('message', `加载维修记录失败: ${error.response?.data?.message || error.message}`, 'error');\n      }\n    },\n    async loadFeedbacks() {\n      try {\n        const response = await this.$axios.get(`/feedbacks/user/${this.user.id}`);\n        this.feedbacks = response.data;\n        this.completedOrdersWithoutFeedback = this.repairOrders.filter(order => order.status === 'COMPLETED' && !this.hasUserFeedback(order));\n      } catch (error) {\n        console.error('加载反馈失败:', error);\n      }\n    },\n    calculateStatistics() {\n      this.statistics = {\n        vehicleCount: this.vehicles.length,\n        repairCount: this.repairOrders.length,\n        pendingCount: this.repairOrders.filter(order => \n          order.status === 'PENDING' || order.status === 'IN_PROGRESS' || order.status === 'ASSIGNED'\n        ).length,\n        totalCost: this.formatCurrency(\n          this.repairOrders.reduce((sum, order) => \n            sum + (order.totalCost || order.laborCost + order.materialCost || 0), 0\n          )\n        )\n      };\n      \n      // 调试信息\n      console.log('所有维修订单:', this.repairOrders);\n      console.log('已完成订单:', this.repairOrders.filter(order => order.status === 'COMPLETED'));\n      console.log('所有反馈:', this.feedbacks);\n      \n      // 更新可反馈的维修单列表\n      this.completedOrdersWithoutFeedback = this.repairOrders\n        .filter(order => order.status === 'COMPLETED' && !this.hasUserFeedback(order));\n      \n      console.log('可反馈的订单:', this.completedOrdersWithoutFeedback);\n    },\n    \n    formatCurrency(amount) {\n      return Math.round((amount || 0) * 100) / 100;\n    },\n    \n    toggleUserMenu() {\n      this.showUserMenu = !this.showUserMenu;\n    },\n    async addVehicle() {\n      try {\n        this.isSubmitting = true;\n        const vehicleData = {\n          licensePlate: this.vehicleForm.licensePlate,\n          brand: this.vehicleForm.brand,\n          model: this.vehicleForm.model,\n          year: parseInt(this.vehicleForm.year),\n          color: this.vehicleForm.color,\n          vin: this.vehicleForm.vin,\n          userId: this.user.id\n        };\n        \n        const response = await this.$axios.post('/vehicles', vehicleData);\n        this.vehicles.push(response.data);\n        this.showAddVehicle = false;\n        this.vehicleForm = { licensePlate: '', brand: '', model: '', year: '', color: '', vin: '' };\n        this.calculateStatistics();\n        this.$emit('message', '车辆添加成功', 'success');\n      } catch (error) {\n        console.error('添加车辆失败:', error);\n        const errorMessage = error.response?.data?.message || error.message || '添加车辆失败';\n        this.$emit('message', errorMessage, 'error');\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    async updateProfile() {\n      try {\n        // 检查用户ID是否存在\n        if (!this.user.id) {\n          throw new Error('用户ID不存在，请重新登录');\n        }\n        \n        console.log('更新用户资料，用户ID:', this.user.id);\n        \n        // 构建完整的用户更新请求数据\n        const updateData = {\n          username: this.user.username, // 保持原用户名\n          password: this.user.password || '', // 如果没有密码字段，发送空字符串\n          name: this.profileForm.name,\n          phone: this.profileForm.phone,\n          email: this.profileForm.email,\n          address: this.profileForm.address,\n          vehicles: this.user.vehicles || [],\n          repairOrders: this.user.repairOrders || []\n        };\n        \n        console.log('发送的更新数据:', updateData);\n        \n        const response = await this.$axios.put(`/users/${this.user.id}`, updateData);\n        this.user = { ...this.user, ...response.data };\n        this.profileForm = { ...this.user };\n        localStorage.setItem('user', JSON.stringify(this.user));\n        this.$emit('message', '个人资料更新成功', 'success');\n      } catch (error) {\n        console.error('更新资料失败:', error);\n        const errorMessage = error.response?.data?.message || error.message || '更新资料失败';\n        this.$emit('message', errorMessage, 'error');\n      }\n    },\n    getStatusText(status) {\n      const statusMap = {\n        'PENDING': '待处理',\n        'IN_PROGRESS': '进行中',\n        'COMPLETED': '已完成',\n        'CANCELLED': '已取消'\n      };\n      return statusMap[status] || status;\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('zh-CN');\n    },\n    editVehicle(vehicle) {\n      // 实现编辑车辆功能\n      this.$emit('message', '编辑功能开发中', 'info');\n    },\n    async deleteVehicle(vehicleId) {\n      if (confirm('确定要删除这辆车吗？')) {\n        try {\n          await this.$axios.delete(`/vehicles/${vehicleId}`);\n          this.loadVehicles();\n          this.$emit('message', '车辆删除成功', 'success');\n        } catch (error) {\n          console.error('删除车辆失败:', error);\n          this.$emit('message', '删除车辆失败', 'error');\n        }\n      }\n    },\n    createRepairOrder(vehicle) {\n      console.log('开始创建维修单，车辆信息:', vehicle);\n      if (!vehicle || !vehicle.id) {\n        console.error('车辆信息无效:', vehicle);\n        this.$emit('message', '车辆信息无效，无法预约维修', 'error');\n        return;\n      }\n      \n      this.repairOrderForm.vehicleId = vehicle.id;\n      this.repairOrderForm.contactPhone = this.user.phone || '';\n      console.log('设置维修单表单:', this.repairOrderForm);\n      this.showCreateOrder = true;\n    },\n    async submitRepairOrder() {\n      try {\n        this.isSubmitting = true;\n        \n        const orderData = {\n          orderNumber: `RO${Date.now()}`, // 生成订单号\n          status: 'PENDING',\n          description: this.repairOrderForm.description,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n          completedAt: null,\n          laborCost: 0,\n          materialCost: 0,\n          totalCost: 0,\n          userId: this.user.id,\n          vehicleId: this.repairOrderForm.vehicleId,\n          technicianIds: [],\n          requiredSkillType: this.repairOrderForm.requiredSkillType\n        };\n        \n        const response = await this.$axios.post('/repair-orders', orderData);\n        this.repairOrders.push(response.data);\n        this.showCreateOrder = false;\n        this.repairOrderForm = { vehicleId: '', description: '', preferredDate: '', contactPhone: '', requiredSkillType: '' };\n        this.calculateStatistics();\n        this.$emit('message', '预约维修成功', 'success');\n      } catch (error) {\n        console.error('预约维修失败:', error);\n        const errorMessage = error.response?.data?.message || error.message || '预约维修失败';\n        this.$emit('message', errorMessage, 'error');\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    viewOrderDetail(order) {\n      this.selectedOrder = order;\n      this.showOrderDetail = true;\n    },\n    addFeedback(order) {\n      this.openFeedbackModal(order);\n    },\n    openFeedbackModal(order) {\n      this.feedbackOrder = order;\n      this.feedbackForm = { comment: '', rating: 0 };\n      this.showFeedback = true;\n    },\n    async submitFeedback() {\n      try {\n        if (!this.isValidFeedback) {\n          this.$emit('message', '请至少填写评分和评价内容', 'warning');\n          return;\n        }\n        \n        this.isSubmitting = true;\n        \n        const feedbackData = {\n          rating: this.feedbackForm.rating,\n          comment: this.feedbackForm.comment,\n          createdAt: new Date(),\n          repairOrderId: this.feedbackOrder.id,\n          userId: this.user.id\n        };\n        \n        const response = await this.$axios.post('/feedbacks', feedbackData);\n        this.feedbacks.push(response.data);\n        this.showFeedback = false;\n        this.feedbackForm = { comment: '', rating: 0 };\n        this.feedbackOrder = null;\n        \n        // 重新计算统计数据，更新可反馈的订单列表\n        this.calculateStatistics();\n        \n        this.$emit('message', '反馈提交成功', 'success');\n      } catch (error) {\n        console.error('提交反馈失败:', error);\n        const errorMessage = error.response?.data?.message || error.message || '提交反馈失败';\n        this.$emit('message', errorMessage, 'error');\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    hasUserFeedback(order) {\n      return this.feedbacks.some(feedback => feedback.repairOrder && feedback.repairOrder.id === order.id);\n    },\n    getSkillTypeName(skillType) {\n      const skillMap = {\n        'MECHANIC': '机械维修',\n        'ELECTRICIAN': '电气维修',\n        'BODY_WORK': '车身维修',\n        'PAINT': '喷漆',\n        'DIAGNOSTIC': '诊断'\n      };\n      return skillMap[skillType] || skillType;\n    },\n\n    getVehicleDisplay(order) {\n      // 首先尝试从订单中获取车辆信息\n      if (order.vehicle && order.vehicle.licensePlate) {\n        return `${order.vehicle.licensePlate} - ${order.vehicle.brand} ${order.vehicle.model}`;\n      }\n      \n      // 如果订单中没有车辆信息，尝试通过vehicleId在vehicles数组中查找\n      const vehicleId = order.vehicleId || (order.vehicle && order.vehicle.id);\n      if (vehicleId && this.vehicles.length > 0) {\n        const vehicle = this.vehicles.find(v => v.id === vehicleId);\n        if (vehicle) {\n          return `${vehicle.licensePlate} - ${vehicle.brand} ${vehicle.model}`;\n        }\n      }\n      \n      return `未知车辆 (ID: ${vehicleId || 'null'})`;\n    },\n    logout() {\n      localStorage.removeItem('user');\n      localStorage.removeItem('userRole');\n      this.$router.push('/');\n    },\n    getRatingText(rating) {\n      const texts = ['请评分', '很差', '一般', '满意', '不错', '非常满意'];\n      return texts[rating] || texts[0];\n    }\n  }\n}\n</script>\n\n<style scoped>\n.customer-dashboard {\n  min-height: 100vh;\n  background: #f8fafc;\n}\n\n.dashboard-header {\n  background: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  padding: 0 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: #42b983;\n}\n\n.nav-menu {\n  display: flex;\n  gap: 1rem;\n}\n\n.nav-menu a {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 1rem;\n  text-decoration: none;\n  color: #6b7280;\n  transition: color 0.2s;\n  border-bottom: 3px solid transparent;\n}\n\n.nav-menu a:hover,\n.nav-menu a.active {\n  color: #42b983;\n  border-bottom-color: #42b983;\n}\n\n.header-right {\n  position: relative;\n}\n\n.user-menu {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  border-radius: 0.5rem;\n  transition: background-color 0.2s;\n}\n\n.user-menu:hover {\n  background: #f3f4f6;\n}\n\n.user-avatar {\n  width: 2rem;\n  height: 2rem;\n  background: #42b983;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n}\n\n.user-dropdown {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 10px 25px rgba(0,0,0,0.1);\n  min-width: 200px;\n  z-index: 1000;\n}\n\n.user-dropdown a {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  text-decoration: none;\n  color: #374151;\n  transition: background-color 0.2s;\n}\n\n.user-dropdown a:hover {\n  background: #f3f4f6;\n}\n\n.dashboard-main {\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.tab-content {\n  animation: fadeIn 0.3s ease;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.welcome-section {\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\n.welcome-section h1 {\n  font-size: 2rem;\n  color: #1f2937;\n  margin-bottom: 0.5rem;\n}\n\n.welcome-section p {\n  color: #6b7280;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.stat-card {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.stat-icon {\n  width: 3rem;\n  height: 3rem;\n  background: linear-gradient(135deg, #42b983, #369970);\n  border-radius: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 1.25rem;\n}\n\n.stat-content h3 {\n  font-size: 1.5rem;\n  font-weight: 700;\n  margin: 0;\n  color: #1f2937;\n}\n\n.stat-content p {\n  margin: 0;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n}\n\n.section-header h2 {\n  font-size: 1.5rem;\n  color: #1f2937;\n  margin: 0;\n}\n\n.quick-actions {\n  margin-bottom: 2rem;\n}\n\n.quick-actions h2 {\n  margin-bottom: 1rem;\n  color: #1f2937;\n}\n\n.action-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n}\n\n.action-card {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  border: none;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n  cursor: pointer;\n  transition: transform 0.2s;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.action-card:hover {\n  transform: translateY(-2px);\n}\n\n.action-card i {\n  font-size: 2rem;\n  color: #42b983;\n}\n\n.action-card span {\n  font-weight: 500;\n  color: #374151;\n}\n\n.recent-section {\n  margin-bottom: 2rem;\n}\n\n.recent-section h2 {\n  margin-bottom: 1rem;\n  color: #1f2937;\n}\n\n.recent-orders {\n  background: white;\n  border-radius: 1rem;\n  padding: 1.5rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n}\n\n.order-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 0;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.order-item:last-child {\n  border-bottom: none;\n}\n\n.order-info h4 {\n  margin: 0 0 0.25rem 0;\n  color: #1f2937;\n}\n\n.order-info p {\n  margin: 0;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.order-info small {\n  color: #9ca3af;\n  font-size: 0.75rem;\n}\n\n.status {\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: 0.75rem;\n  font-weight: 500;\n  text-transform: uppercase;\n}\n\n.status.pending {\n  background: #fef3c7;\n  color: #d97706;\n}\n\n.status.in_progress {\n  background: #dbeafe;\n  color: #2563eb;\n}\n\n.status.completed {\n  background: #d1fae5;\n  color: #059669;\n}\n\n.status.cancelled {\n  background: #fee2e2;\n  color: #dc2626;\n}\n\n.vehicles-grid,\n.orders-container,\n.feedback-container {\n  display: grid;\n  gap: 1.5rem;\n}\n\n.vehicles-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1.5rem;\n  padding: 1.5rem;\n  grid-auto-rows: minmax(min-content, max-content);\n}\n\n.vehicle-card {\n  display: flex;\n  flex-direction: column;\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n  height: 100%;\n}\n\n.vehicle-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.vehicle-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.btn-icon {\n  width: 2rem;\n  height: 2rem;\n  border: none;\n  border-radius: 0.5rem;\n  background: #f3f4f6;\n  color: #6b7280;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.btn-icon:hover {\n  background: #e5e7eb;\n}\n\n.btn-icon.danger:hover {\n  background: #fee2e2;\n  color: #dc2626;\n}\n\n.status-badge {\n  padding: 0.5rem 1rem;\n  border-radius: 9999px;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.order-footer {\n  display: flex;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 3rem 1rem;\n  color: #6b7280;\n}\n\n.empty-state i {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  opacity: 0.5;\n}\n\n.empty-state h3 {\n  margin-bottom: 0.5rem;\n  color: #374151;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0,0,0,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.modal {\n  background: white;\n  border-radius: 1rem;\n  max-width: 500px;\n  width: 90%;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n.modal.large {\n  max-width: 700px;\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.modal-close {\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  color: #6b7280;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.modal-footer {\n  display: flex;\n  gap: 1rem;\n  margin-top: 1.5rem;\n  justify-content: flex-end;\n}\n\n.required {\n  color: #dc2626;\n}\n\n.detail-section {\n  margin-bottom: 1.5rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.detail-section:last-child {\n  border-bottom: none;\n  margin-bottom: 0;\n}\n\n.detail-section h4 {\n  color: #1f2937;\n  margin-bottom: 1rem;\n}\n\n.detail-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 1rem;\n}\n\n.detail-item {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.detail-label {\n  font-size: 0.875rem;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n.detail-value {\n  color: #1f2937;\n  font-weight: 500;\n}\n\n.fault-description {\n  background: #f3f4f6;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  border-left: 4px solid #42b983;\n  margin: 0;\n}\n\n.technician-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.technician-item {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  background: #f9fafb;\n  padding: 0.75rem;\n  border-radius: 0.5rem;\n}\n\n.tech-avatar {\n  width: 2.5rem;\n  height: 2.5rem;\n  background: #42b983;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n}\n\n.tech-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.tech-name {\n  font-weight: 500;\n  color: #1f2937;\n}\n\n.tech-skill {\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.cost-breakdown {\n  background: #f9fafb;\n  padding: 1rem;\n  border-radius: 0.5rem;\n}\n\n.cost-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem 0;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.cost-item:last-child {\n  border-bottom: none;\n}\n\n.cost-item.total {\n  font-weight: 600;\n  font-size: 1.1rem;\n  border-top: 2px solid #42b983;\n  padding-top: 0.75rem;\n  margin-top: 0.5rem;\n}\n\n.feedback-order-info {\n  background: #f3f4f6;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.feedback-order-info h4 {\n  margin: 0 0 0.5rem 0;\n  color: #1f2937;\n}\n\n.feedback-order-info p {\n  margin: 0;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.profile-container {\n  max-width: 600px;\n}\n\n.profile-form {\n  background: white;\n  padding: 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .dashboard-header {\n    padding: 0 1rem;\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .header-left {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .nav-menu {\n    overflow-x: auto;\n  }\n  \n  .dashboard-main {\n    padding: 1rem;\n  }\n  \n  .stats-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .action-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .section-header {\n    flex-direction: column;\n    gap: 1rem;\n    align-items: stretch;\n  }\n  \n  .modal {\n    margin: 1rem;\n    width: calc(100% - 2rem);\n  }\n  \n  .detail-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .technician-list {\n    flex-direction: column;\n  }\n  \n  .modal-footer {\n    flex-direction: column;\n  }\n}\n\n/* 评分组件样式 */\n.rating-container {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.star-rating {\n  display: flex;\n  gap: 0.25rem;\n}\n\n.star {\n  cursor: pointer;\n  font-size: 1.5rem;\n  color: #d1d5db;\n  transition: color 0.2s;\n}\n\n.star:hover, .star.active {\n  color: #f59e0b;\n}\n\n.rating-text {\n  font-size: 0.875rem;\n  color: #4b5563;\n}\n\n/* 反馈提示样式优化 */\n.feedback-prompt {\n  background: #f0f9ff;\n  border-left: 4px solid #0ea5e9;\n  padding: 1.25rem;\n  border-radius: 0.5rem;\n  margin-bottom: 1rem;\n  transition: transform 0.2s;\n}\n\n.feedback-prompt:hover {\n  transform: translateX(2px);\n}\n\n.feedback-prompt-text {\n  margin: 0.5rem 0;\n  font-weight: 500;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}