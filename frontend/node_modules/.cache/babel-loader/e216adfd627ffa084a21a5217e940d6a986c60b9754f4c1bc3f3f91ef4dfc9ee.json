{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport default {\n  name: 'TechnicianDashboard',\n  data() {\n    return {\n      user: {},\n      activeTab: 'overview',\n      showUserMenu: false,\n      showTaskDetail: false,\n      showCompleteTask: false,\n      taskFilter: '',\n      allTasks: [],\n      selectedTask: null,\n      completeTaskForm: {\n        materialCost: '',\n        workNotes: ''\n      },\n      statistics: {\n        totalTasks: 0,\n        completedTasks: 0,\n        pendingTasks: 0,\n        monthlyEarnings: 0\n      },\n      earnings: {\n        monthly: 0,\n        total: 0,\n        averagePerTask: 0\n      },\n      profileForm: {},\n      isSubmitting: false,\n      materials: [],\n      materialRows: [{\n        materialId: null,\n        quantity: 1\n      }]\n    };\n  },\n  computed: {\n    pendingTasks() {\n      return this.allTasks.filter(task => task.status === 'ASSIGNED' || task.status === 'IN_PROGRESS');\n    },\n    completedTasks() {\n      return this.allTasks.filter(task => task.status === 'COMPLETED');\n    },\n    filteredTasks() {\n      if (!this.taskFilter) return this.allTasks;\n      return this.allTasks.filter(task => task.status === this.taskFilter);\n    },\n    materialCostComputed() {\n      return this.materialRows.reduce((sum, row) => {\n        const mat = this.materials.find(m => m.id === row.materialId);\n        if (mat && row.quantity) {\n          return sum + mat.unitPrice * row.quantity;\n        }\n        return sum;\n      }, 0).toFixed(2);\n    }\n  },\n  created() {\n    this.loadUserInfo();\n    this.loadData();\n  },\n  methods: {\n    loadUserInfo() {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        this.user = JSON.parse(userData);\n        this.profileForm = {\n          ...this.user\n        };\n        console.log('加载的技师数据:', this.user);\n\n        // 检查技师ID是否存在\n        if (!this.user.id) {\n          console.error('技师数据中缺少ID字段:', this.user);\n          this.$emit('message', '用户数据错误，请重新登录', 'error');\n          this.logout();\n        }\n      } else {\n        console.error('localStorage中没有技师数据');\n        this.$emit('message', '未找到用户信息，请重新登录', 'error');\n        this.logout();\n      }\n    },\n    async loadData() {\n      try {\n        await Promise.all([this.loadTasks(), this.loadStatistics(), this.loadEarnings()]);\n      } catch (error) {\n        console.error('加载数据失败:', error);\n        this.$emit('message', '加载数据失败', 'error');\n      }\n    },\n    async loadTasks() {\n      try {\n        console.log('开始加载技师任务，技师ID:', this.user.id);\n        const response = await this.$axios.get(`/repair-orders/technician/${this.user.id}`);\n        console.log('技师任务API响应:', response.data);\n        this.allTasks = response.data || [];\n        console.log('设置技师任务数据:', this.allTasks);\n        if (this.allTasks.length === 0) {\n          console.log('没有找到分配给该技师的任务');\n        } else {\n          console.log(`成功加载 ${this.allTasks.length} 个任务`);\n        }\n      } catch (error) {\n        console.error('加载技师任务失败:', error);\n        console.error('错误详情:', error.response?.data);\n\n        // 设置空数组避免界面错误\n        this.allTasks = [];\n        this.$emit('message', `加载任务失败: ${error.response?.data?.message || error.message}`, 'error');\n      }\n    },\n    async loadStatistics() {\n      try {\n        console.log('开始加载技师统计数据，技师ID:', this.user.id);\n        const response = await this.$axios.get(`/technicians/${this.user.id}/statistics`);\n        console.log('技师统计API响应:', response.data);\n        this.statistics = {\n          totalTasks: response.data.totalTasks || 0,\n          completedTasks: response.data.completedTasks || 0,\n          pendingTasks: response.data.pendingTasks || 0,\n          monthlyEarnings: response.data.monthlyEarnings || 0\n        };\n        console.log('设置统计数据:', this.statistics);\n      } catch (error) {\n        console.error('加载统计数据失败:', error);\n\n        // 基于本地任务数据计算统计信息作为备用\n        const totalTasks = this.allTasks.length;\n        const completedTasks = this.allTasks.filter(task => task.status === 'COMPLETED').length;\n        const pendingTasks = this.allTasks.filter(task => task.status === 'ASSIGNED' || task.status === 'IN_PROGRESS').length;\n        this.statistics = {\n          totalTasks,\n          completedTasks,\n          pendingTasks,\n          monthlyEarnings: 0 // 无法本地计算，需要服务器端\n        };\n        console.log('使用本地计算的统计数据:', this.statistics);\n      }\n    },\n    async loadEarnings() {\n      try {\n        console.log('开始加载技师收入数据，技师ID:', this.user.id);\n\n        // 获取总收入\n        const totalEarningsResponse = await this.$axios.get(`/technicians/${this.user.id}/earnings`);\n        const totalEarnings = totalEarningsResponse.data || 0;\n\n        // 获取本月收入\n        const monthlyEarningsResponse = await this.$axios.get(`/technicians/${this.user.id}/monthly-earnings`);\n        const monthlyEarnings = monthlyEarningsResponse.data || 0;\n\n        // 计算平均每任务收入\n        const completedTaskCount = this.statistics.completedTasks || 1;\n        const averagePerTask = totalEarnings / completedTaskCount;\n        this.earnings = {\n          monthly: monthlyEarnings,\n          total: totalEarnings,\n          averagePerTask: Math.round(averagePerTask * 100) / 100 // 保留两位小数\n        };\n        console.log('设置收入数据:', this.earnings);\n      } catch (error) {\n        console.error('加载收入数据失败:', error);\n\n        // 基于完成的任务估算收入作为备用\n        const completedTasks = this.allTasks.filter(task => task.status === 'COMPLETED');\n        const estimatedTotal = completedTasks.reduce((sum, task) => {\n          // 估算：假设每个任务平均工作8小时\n          const estimatedHours = 8;\n          const hourlyRate = this.user.hourlyRate || 50;\n          return sum + estimatedHours * hourlyRate;\n        }, 0);\n        this.earnings = {\n          monthly: Math.round(estimatedTotal * 0.3 * 100) / 100,\n          // 假设本月占30%\n          total: Math.round(estimatedTotal * 100) / 100,\n          averagePerTask: completedTasks.length > 0 ? Math.round(estimatedTotal / completedTasks.length * 100) / 100 : 0\n        };\n        console.log('使用估算的收入数据:', this.earnings);\n      }\n    },\n    formatCurrency(amount) {\n      return Math.round((amount || 0) * 100) / 100;\n    },\n    toggleUserMenu() {\n      this.showUserMenu = !this.showUserMenu;\n    },\n    getSkillTypeName(skillType) {\n      const skillMap = {\n        'MECHANIC': '机械维修',\n        'ELECTRICIAN': '电气维修',\n        'BODY_WORK': '车身维修',\n        'PAINT': '喷漆',\n        'DIAGNOSTIC': '诊断'\n      };\n      return skillMap[skillType] || skillType;\n    },\n    getStatusText(status) {\n      const statusMap = {\n        'PENDING': '待处理',\n        'ASSIGNED': '已分配',\n        'IN_PROGRESS': '进行中',\n        'COMPLETED': '已完成',\n        'CANCELLED': '已取消'\n      };\n      return statusMap[status] || status;\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('zh-CN');\n    },\n    calculateDuration(startDate, endDate) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      const days = Math.ceil((end - start) / (1000 * 60 * 60 * 24));\n      return `${days}天`;\n    },\n    async startTask(task) {\n      try {\n        console.log('开始任务:', task.id);\n        const response = await this.$axios.put(`/repair-orders/${task.id}/status`, null, {\n          params: {\n            status: 'IN_PROGRESS'\n          }\n        });\n\n        // 更新本地任务状态\n        const taskIndex = this.allTasks.findIndex(t => t.id === task.id);\n        if (taskIndex !== -1) {\n          this.allTasks[taskIndex].status = 'IN_PROGRESS';\n          this.allTasks[taskIndex].updatedAt = new Date().toISOString();\n        }\n        this.loadStatistics(); // 重新计算统计信息\n        this.$emit('message', '任务已开始', 'success');\n      } catch (error) {\n        console.error('开始任务失败:', error);\n        // 如果API不存在，直接更新本地状态\n        const taskIndex = this.allTasks.findIndex(t => t.id === task.id);\n        if (taskIndex !== -1) {\n          this.allTasks[taskIndex].status = 'IN_PROGRESS';\n          this.allTasks[taskIndex].updatedAt = new Date().toISOString();\n        }\n        this.loadStatistics();\n        this.$emit('message', '任务已开始', 'success');\n      }\n    },\n    async completeTask(task) {\n      this.selectedTask = task;\n      this.completeTaskForm = {\n        materialCost: '',\n        workNotes: ''\n      };\n      this.materialRows = [{\n        materialId: null,\n        quantity: 1\n      }];\n      await this.fetchMaterials();\n      this.showCompleteTask = true;\n    },\n    viewTask(task) {\n      this.selectedTask = task;\n      this.showTaskDetail = true;\n    },\n    viewTaskDetail(task) {\n      this.selectedTask = task;\n      this.showTaskDetail = true;\n    },\n    closeTaskDetail() {\n      this.showTaskDetail = false;\n      this.selectedTask = null;\n    },\n    getVehicleDisplay(task) {\n      if (task.vehicle) {\n        return `${task.vehicle.licensePlate} - ${task.vehicle.brand} ${task.vehicle.model}`;\n      }\n      return '未知车辆';\n    },\n    async updateProfile() {\n      try {\n        // 构建完整的技师更新请求数据\n        const updateData = {\n          name: this.profileForm.name,\n          employeeId: this.user.employeeId,\n          // 保持原员工ID\n          username: this.user.username,\n          // 保持原用户名\n          password: '',\n          // 不更新密码时发送空字符串\n          phone: this.profileForm.phone,\n          email: this.profileForm.email,\n          skillType: this.profileForm.skillType,\n          hourlyRate: parseFloat(this.profileForm.hourlyRate)\n        };\n        const response = await this.$axios.put(`/technicians/${this.user.id}`, updateData);\n        this.user = {\n          ...this.user,\n          ...response.data\n        };\n        this.profileForm = {\n          ...this.user\n        };\n        localStorage.setItem('user', JSON.stringify(this.user));\n        this.$emit('message', '个人资料更新成功', 'success');\n      } catch (error) {\n        console.error('更新资料失败:', error);\n        const errorMessage = error.response?.data?.message || error.message || '更新资料失败';\n        this.$emit('message', errorMessage, 'error');\n      }\n    },\n    logout() {\n      localStorage.removeItem('user');\n      localStorage.removeItem('userRole');\n      this.$router.push('/');\n    },\n    async submitCompleteTask() {\n      try {\n        this.isSubmitting = true;\n        console.log('提交完成任务:', this.selectedTask.id);\n        const response = await this.$axios.put(`/repair-orders/${this.selectedTask.id}/status`, null, {\n          params: {\n            status: 'COMPLETED',\n            materialCost: this.completeTaskForm.materialCost\n          }\n        });\n\n        // 更新本地任务状态\n        const taskIndex = this.allTasks.findIndex(t => t.id === this.selectedTask.id);\n        if (taskIndex !== -1) {\n          this.allTasks[taskIndex].status = 'COMPLETED';\n          this.allTasks[taskIndex].completedAt = new Date().toISOString();\n          this.allTasks[taskIndex].materialCost = this.completeTaskForm.materialCost;\n          this.allTasks[taskIndex].updatedAt = new Date().toISOString();\n        }\n        this.closeCompleteTask();\n        this.loadStatistics(); // 重新计算统计信息\n        this.loadEarnings(); // 重新计算收入\n        this.$emit('message', '任务已完成！', 'success');\n      } catch (error) {\n        console.error('完成任务失败:', error);\n        this.$emit('message', '完成任务失败: ' + (error.response?.data?.message || error.message), 'error');\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    closeCompleteTask() {\n      this.showCompleteTask = false;\n      this.selectedTask = null;\n      this.completeTaskForm = {\n        materialCost: '',\n        workNotes: ''\n      };\n    },\n    async fetchMaterials() {\n      try {\n        const res = await this.$axios.get('/materials');\n        this.materials = res.data || [];\n      } catch (e) {\n        console.error('加载材料列表失败', e);\n        this.$emit('message', '加载材料列表失败', 'error');\n      }\n    },\n    addMaterialRow() {\n      this.materialRows.push({\n        materialId: null,\n        quantity: 1\n      });\n    },\n    removeMaterialRow(index) {\n      this.materialRows.splice(index, 1);\n    },\n    materialRowCost(row) {\n      const mat = this.materials.find(m => m.id === row.materialId);\n      return mat && row.quantity ? (mat.unitPrice * row.quantity).toFixed(2) : 0;\n    }\n  },\n  watch: {\n    materialCostComputed(newVal) {\n      this.completeTaskForm.materialCost = newVal;\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","activeTab","showUserMenu","showTaskDetail","showCompleteTask","taskFilter","allTasks","selectedTask","completeTaskForm","materialCost","workNotes","statistics","totalTasks","completedTasks","pendingTasks","monthlyEarnings","earnings","monthly","total","averagePerTask","profileForm","isSubmitting","materials","materialRows","materialId","quantity","computed","filter","task","status","filteredTasks","materialCostComputed","reduce","sum","row","mat","find","m","id","unitPrice","toFixed","created","loadUserInfo","loadData","methods","userData","localStorage","getItem","JSON","parse","console","log","error","$emit","logout","Promise","all","loadTasks","loadStatistics","loadEarnings","response","$axios","get","length","message","totalEarningsResponse","totalEarnings","monthlyEarningsResponse","completedTaskCount","Math","round","estimatedTotal","estimatedHours","hourlyRate","formatCurrency","amount","toggleUserMenu","getSkillTypeName","skillType","skillMap","getStatusText","statusMap","formatDate","dateString","Date","toLocaleDateString","calculateDuration","startDate","endDate","start","end","days","ceil","startTask","put","params","taskIndex","findIndex","t","updatedAt","toISOString","completeTask","fetchMaterials","viewTask","viewTaskDetail","closeTaskDetail","getVehicleDisplay","vehicle","licensePlate","brand","model","updateProfile","updateData","employeeId","username","password","phone","email","parseFloat","setItem","stringify","errorMessage","removeItem","$router","push","submitCompleteTask","completedAt","closeCompleteTask","res","e","addMaterialRow","removeMaterialRow","index","splice","materialRowCost","watch","newVal"],"sources":["src/views/TechnicianDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"technician-dashboard\">\n    <!-- 顶部导航栏 -->\n    <header class=\"dashboard-header\">\n      <div class=\"header-left\">\n        <div class=\"logo\">\n          <i class=\"fas fa-tools\"></i>\n          <span>技师工作台</span>\n        </div>\n        <nav class=\"nav-menu\">\n          <a href=\"#\" @click=\"activeTab = 'overview'\" :class=\"{ active: activeTab === 'overview' }\">\n            <i class=\"fas fa-home\"></i> 概览\n          </a>\n          <a href=\"#\" @click=\"activeTab = 'tasks'\" :class=\"{ active: activeTab === 'tasks' }\">\n            <i class=\"fas fa-tasks\"></i> 我的任务\n          </a>\n          <a href=\"#\" @click=\"activeTab = 'history'\" :class=\"{ active: activeTab === 'history' }\">\n            <i class=\"fas fa-history\"></i> 工作历史\n          </a>\n          <a href=\"#\" @click=\"activeTab = 'earnings'\" :class=\"{ active: activeTab === 'earnings' }\">\n            <i class=\"fas fa-dollar-sign\"></i> 收入统计\n          </a>\n        </nav>\n      </div>\n      <div class=\"header-right\">\n        <div class=\"user-menu\" @click=\"toggleUserMenu\">\n          <div class=\"user-avatar\">\n            <i class=\"fas fa-user-hard-hat\"></i>\n          </div>\n          <span class=\"user-name\">{{ user.name || user.username }}</span>\n          <i class=\"fas fa-chevron-down\"></i>\n        </div>\n        <div v-if=\"showUserMenu\" class=\"user-dropdown\">\n          <a href=\"#\" @click=\"activeTab = 'profile'\">\n            <i class=\"fas fa-user-edit\"></i> 个人资料\n          </a>\n          <a href=\"#\" @click=\"logout\">\n            <i class=\"fas fa-sign-out-alt\"></i> 登出\n          </a>\n        </div>\n      </div>\n    </header>\n\n    <!-- 主内容区域 -->\n    <main class=\"dashboard-main\">\n      <!-- 概览页面 -->\n      <div v-if=\"activeTab === 'overview'\" class=\"tab-content\">\n        <div class=\"welcome-section\">\n          <h1>欢迎回来，{{ user.name || user.username }}技师！</h1>\n          <div class=\"skill-badge\">\n            <i class=\"fas fa-award\"></i>\n            <span>{{ getSkillTypeName(user.skillType) }}</span>\n          </div>\n        </div>\n\n        <!-- 统计卡片 -->\n        <div class=\"stats-grid\">\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #f59e0b, #d97706);\">\n              <i class=\"fas fa-tasks\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ statistics.totalTasks }}</h3>\n              <p>总任务数</p>\n            </div>\n          </div>\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #10b981, #059669);\">\n              <i class=\"fas fa-check-circle\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ statistics.completedTasks }}</h3>\n              <p>已完成任务</p>\n            </div>\n          </div>\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #3b82f6, #2563eb);\">\n              <i class=\"fas fa-clock\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ statistics.pendingTasks }}</h3>\n              <p>进行中任务</p>\n            </div>\n          </div>\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #8b5cf6, #7c3aed);\">\n              <i class=\"fas fa-dollar-sign\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>¥{{ formatCurrency(statistics.monthlyEarnings || 0) }}</h3>\n              <p>本月收入</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- 技师信息卡片 -->\n        <div class=\"info-section\">\n          <div class=\"technician-card\">\n            <div class=\"tech-avatar\">\n              <i class=\"fas fa-user-hard-hat\"></i>\n            </div>\n            <div class=\"tech-info\">\n              <h3>{{ user.name }}</h3>\n              <p class=\"tech-id\">员工ID: {{ user.employeeId }}</p>\n              <div class=\"tech-details\">\n                <div class=\"detail-item\">\n                  <i class=\"fas fa-cogs\"></i>\n                  <span>{{ getSkillTypeName(user.skillType) }}</span>\n                </div>\n                <div class=\"detail-item\">\n                  <i class=\"fas fa-dollar-sign\"></i>\n                  <span>¥{{ user.hourlyRate }}/小时</span>\n                </div>\n                <div class=\"detail-item\">\n                  <i class=\"fas fa-phone\"></i>\n                  <span>{{ user.phone }}</span>\n                </div>\n                <div class=\"detail-item\">\n                  <i class=\"fas fa-envelope\"></i>\n                  <span>{{ user.email }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"earnings-overview\">\n            <h3>收入概览</h3>\n            <div class=\"earnings-stats\">\n              <div class=\"earnings-item\">\n                <span class=\"earnings-label\">本月收入</span>\n                <span class=\"earnings-value\">¥{{ formatCurrency(earnings.monthly) }}</span>\n              </div>\n              <div class=\"earnings-item\">\n                <span class=\"earnings-label\">总收入</span>\n                <span class=\"earnings-value\">¥{{ formatCurrency(earnings.total) }}</span>\n              </div>\n            </div>\n            <button class=\"btn btn-outline\" @click=\"activeTab = 'earnings'\">\n              <i class=\"fas fa-chart-line\"></i> 查看详细\n            </button>\n          </div>\n        </div>\n\n        <!-- 待处理任务 -->\n        <div class=\"pending-tasks\">\n          <h2>待处理任务</h2>\n          <div class=\"task-list\">\n            <div v-if=\"pendingTasks.length === 0\" class=\"empty-state\">\n              <i class=\"fas fa-check-circle\"></i>\n              <p>暂无待处理任务</p>\n            </div>\n            <div v-for=\"task in pendingTasks.slice(0, 5)\" :key=\"task.id\" class=\"task-item\">\n              <div class=\"task-info\">\n                <h4>{{ task.orderNumber || `维修单 #${task.id}` }}</h4>\n                <p>{{ task.description }}</p>\n                <div class=\"task-meta\">\n                  <span class=\"task-date\">\n                    <i class=\"fas fa-calendar\"></i>\n                    {{ formatDate(task.createdAt) }}\n                  </span>\n                  <span class=\"task-vehicle\">\n                    <i class=\"fas fa-car\"></i>\n                    {{ getVehicleDisplay(task) }}\n                  </span>\n                  <span class=\"task-customer\">\n                    <i class=\"fas fa-user\"></i>\n                    {{ task.user ? task.user.name : '未知客户' }}\n                  </span>\n                </div>\n              </div>\n              <div class=\"task-actions\">\n                <span :class=\"['task-status', task.status.toLowerCase()]\">\n                  {{ getStatusText(task.status) }}\n                </span>\n                <button v-if=\"task.status === 'ASSIGNED'\" class=\"btn btn-primary btn-sm\" @click=\"startTask(task)\">\n                  <i class=\"fas fa-play\"></i> 开始\n                </button>\n                <button v-if=\"task.status === 'ASSIGNED'\" class=\"btn btn-danger btn-sm\" @click=\"showRejectConfirm(task)\">\n                  <i class=\"fas fa-times\"></i> 拒绝\n                </button>\n                <button v-else-if=\"task.status === 'IN_PROGRESS'\" class=\"btn btn-success btn-sm\" @click=\"completeTask(task)\">\n                  <i class=\"fas fa-check\"></i> 完成\n                </button>\n                <button class=\"btn btn-outline btn-sm\" @click=\"viewTask(task)\">\n                  <i class=\"fas fa-eye\"></i> 查看\n                </button>\n              </div>\n            </div>\n          </div>\n          <button v-if=\"pendingTasks.length > 5\" class=\"btn btn-outline\" @click=\"activeTab = 'tasks'\">\n            查看全部任务\n          </button>\n        </div>\n      </div>\n\n      <!-- 任务管理页面 -->\n      <div v-if=\"activeTab === 'tasks'\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>我的任务</h2>\n          <div class=\"task-filters\">\n            <select v-model=\"taskFilter\" class=\"form-input\">\n              <option value=\"\">全部状态</option>\n              <option value=\"ASSIGNED\">已分配</option>\n              <option value=\"IN_PROGRESS\">进行中</option>\n              <option value=\"COMPLETED\">已完成</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"tasks-container\">\n          <div v-if=\"filteredTasks.length === 0\" class=\"empty-state\">\n            <i class=\"fas fa-tasks\"></i>\n            <h3>暂无任务</h3>\n            <p>等待系统分配新任务</p>\n          </div>\n          <div v-for=\"task in filteredTasks\" :key=\"task.id\" class=\"task-card\">\n            <div class=\"task-header\">\n              <div>\n                <h3>{{ task.orderNumber || `维修单 #${task.id}` }}</h3>\n                <p class=\"task-vehicle\">{{ getVehicleDisplay(task) }}</p>\n              </div>\n              <span :class=\"['status-badge', task.status.toLowerCase()]\">\n                {{ getStatusText(task.status) }}\n              </span>\n            </div>\n            <div class=\"task-body\">\n              <p><strong>故障描述:</strong> {{ task.description }}</p>\n              <div class=\"task-info\">\n                <div class=\"info-item\">\n                  <i class=\"fas fa-user\"></i>\n                  <span>客户: {{ task.user ? task.user.name : '未知' }}</span>\n                </div>\n                <div class=\"info-item\">\n                  <i class=\"fas fa-phone\"></i>\n                  <span>{{ task.user ? task.user.phone : '无联系方式' }}</span>\n                </div>\n                <div class=\"info-item\">\n                  <i class=\"fas fa-calendar\"></i>\n                  <span>创建: {{ formatDate(task.createdAt) }}</span>\n                </div>\n                <div v-if=\"task.completedAt\" class=\"info-item\">\n                  <i class=\"fas fa-check-circle\"></i>\n                  <span>完成: {{ formatDate(task.completedAt) }}</span>\n                </div>\n              </div>\n              <p><strong>工时费用:</strong> ¥{{ task.laborCost || 0 }}</p>\n            </div>\n            <div class=\"task-footer\">\n              <button v-if=\"task.status === 'ASSIGNED'\" @click=\"startTask(task)\" class=\"btn btn-primary\">\n                <i class=\"fas fa-play\"></i> 开始任务\n              </button>\n              <button v-if=\"task.status === 'ASSIGNED'\" @click=\"showRejectConfirm(task)\" class=\"btn btn-danger\">\n                <i class=\"fas fa-times\"></i> 拒绝订单\n              </button>\n              <button v-if=\"task.status === 'IN_PROGRESS'\" @click=\"completeTask(task)\" class=\"btn btn-success\">\n                <i class=\"fas fa-check\"></i> 完成任务\n              </button>\n              <button @click=\"viewTaskDetail(task)\" class=\"btn btn-outline\">\n                <i class=\"fas fa-eye\"></i> 查看详情\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 工作历史页面 -->\n      <div v-if=\"activeTab === 'history'\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>工作历史</h2>\n        </div>\n        \n        <div class=\"history-container\">\n          <div v-if=\"completedTasks.length === 0\" class=\"empty-state\">\n            <i class=\"fas fa-history\"></i>\n            <h3>暂无历史记录</h3>\n            <p>完成任务后将显示在这里</p>\n          </div>\n          <div v-for=\"task in completedTasks\" :key=\"task.id\" class=\"history-card\">\n            <div class=\"history-header\">\n              <div>\n                <h3>维修单 #{{ task.id }}</h3>\n                <p>{{ task.vehiclePlate }}</p>\n              </div>\n              <div class=\"completion-date\">\n                <i class=\"fas fa-check-circle\"></i>\n                {{ formatDate(task.endDate) }}\n              </div>\n            </div>\n            <div class=\"history-body\">\n              <p>{{ task.description }}</p>\n              <div class=\"history-metrics\">\n                <span class=\"metric\">\n                  <i class=\"fas fa-clock\"></i>\n                  耗时: {{ calculateDuration(task.startDate, task.endDate) }}\n                </span>\n                <span class=\"metric\">\n                  <i class=\"fas fa-dollar-sign\"></i>\n                  费用: ¥{{ task.actualCost || task.estimatedCost }}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 收入统计页面 -->\n      <div v-if=\"activeTab === 'earnings'\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>收入统计</h2>\n        </div>\n        \n        <div class=\"earnings-dashboard\">\n          <div class=\"earnings-summary\">\n            <div class=\"summary-card\">\n              <h3>本月收入</h3>\n              <div class=\"amount\">¥{{ formatCurrency(earnings.monthly) }}</div>\n              <div class=\"change positive\">\n                <i class=\"fas fa-arrow-up\"></i>\n                +12.5%\n              </div>\n            </div>\n            <div class=\"summary-card\">\n              <h3>平均每单</h3>\n              <div class=\"amount\">¥{{ formatCurrency(earnings.averagePerTask) }}</div>\n              <div class=\"change\">\n                <i class=\"fas fa-minus\"></i>\n                持平\n              </div>\n            </div>\n            <div class=\"summary-card\">\n              <h3>总收入</h3>\n              <div class=\"amount\">¥{{ formatCurrency(earnings.total) }}</div>\n              <div class=\"tasks-count\">{{ statistics.completedTasks }}个任务</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 个人资料页面 -->\n      <div v-if=\"activeTab === 'profile'\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>个人资料</h2>\n        </div>\n        \n        <div class=\"profile-container\">\n          <form @submit.prevent=\"updateProfile\" class=\"profile-form\">\n            <div class=\"form-group\">\n              <label class=\"form-label\">姓名</label>\n              <input v-model=\"profileForm.name\" class=\"form-input\" required>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">员工ID</label>\n              <input v-model=\"profileForm.employeeId\" class=\"form-input\" disabled>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">用户名</label>\n              <input v-model=\"profileForm.username\" class=\"form-input\" disabled>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">电话</label>\n              <input v-model=\"profileForm.phone\" class=\"form-input\" required>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">邮箱</label>\n              <input v-model=\"profileForm.email\" type=\"email\" class=\"form-input\" required>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">技能类型</label>\n              <select v-model=\"profileForm.skillType\" class=\"form-input\" required>\n                <option value=\"MECHANIC\">机械维修</option>\n                <option value=\"ELECTRICIAN\">电气维修</option>\n                <option value=\"BODY_WORK\">车身维修</option>\n                <option value=\"PAINT\">喷漆</option>\n                <option value=\"DIAGNOSTIC\">诊断</option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">小时费率</label>\n              <input v-model=\"profileForm.hourlyRate\" type=\"number\" step=\"0.01\" class=\"form-input\" required>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">\n              <i class=\"fas fa-save\"></i> 保存更改\n            </button>\n          </form>\n        </div>\n      </div>\n    </main>\n\n    <!-- 拒绝订单确认模态框 -->\n    <div v-if=\"showRejectModal\" class=\"modal-overlay\" @click=\"closeRejectModal\">\n      <div class=\"modal-content reject-modal\" @click.stop>\n        <div class=\"modal-header\">\n          <h2>拒绝订单确认</h2>\n          <button class=\"modal-close\" @click=\"closeRejectModal\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"reject-info\">\n            <div class=\"warning-icon\">\n              <i class=\"fas fa-exclamation-triangle\"></i>\n            </div>\n            <h3>确定要拒绝此订单吗？</h3>\n            <div class=\"order-info\">\n              <p><strong>订单号:</strong> {{ rejectTask ? rejectTask.orderNumber : '未知' }}</p>\n              <p><strong>故障描述:</strong> {{ rejectTask ? rejectTask.description : '未知' }}</p>\n              <p><strong>车辆:</strong> {{ rejectTask ? getVehicleDisplay(rejectTask) : '未知' }}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">拒绝原因 (可选)</label>\n            <textarea \n              v-model=\"rejectReason\" \n              class=\"form-input\" \n              rows=\"3\" \n              placeholder=\"请输入拒绝原因，如：工作负载过重、技能不匹配、设备不足等\"\n            ></textarea>\n          </div>\n          <div class=\"reject-notice\">\n            <i class=\"fas fa-info-circle\"></i>\n            <p>拒绝后，系统将自动将此订单重新分配给其他技师。</p>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-outline\" @click=\"closeRejectModal\">\n            <i class=\"fas fa-arrow-left\"></i> 取消\n          </button>\n          <button class=\"btn btn-danger\" @click=\"confirmRejectOrder\" :disabled=\"isRejectingOrder\">\n            <i class=\"fas fa-times\"></i> \n            {{ isRejectingOrder ? '处理中...' : '确认拒绝' }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 任务详情模态框 -->\n    <div v-if=\"showTaskDetail && selectedTask\" class=\"modal-overlay\" @click=\"closeTaskDetail\">\n      <div class=\"modal-content\" @click.stop>\n        <div class=\"modal-header\">\n          <h2>{{ selectedTask.orderNumber || `维修单 #${selectedTask.id}` }}</h2>\n          <button class=\"modal-close\" @click=\"closeTaskDetail\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"detail-section\">\n            <h3>基本信息</h3>\n            <div class=\"detail-grid\">\n              <div class=\"detail-item\">\n                <label>订单号:</label>\n                <span>{{ selectedTask.orderNumber || `RO-${selectedTask.id}` }}</span>\n              </div>\n              <div class=\"detail-item\">\n                <label>状态:</label>\n                <span :class=\"['status-badge', selectedTask.status.toLowerCase()]\">\n                  {{ getStatusText(selectedTask.status) }}\n                </span>\n              </div>\n              <div class=\"detail-item\">\n                <label>创建时间:</label>\n                <span>{{ formatDate(selectedTask.createdAt) }}</span>\n              </div>\n              <div v-if=\"selectedTask.completedAt\" class=\"detail-item\">\n                <label>完成时间:</label>\n                <span>{{ formatDate(selectedTask.completedAt) }}</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"detail-section\">\n            <h3>车辆信息</h3>\n            <div class=\"detail-grid\" v-if=\"selectedTask.vehicle\">\n              <div class=\"detail-item\">\n                <label>车牌号:</label>\n                <span>{{ selectedTask.vehicle.licensePlate }}</span>\n              </div>\n              <div class=\"detail-item\">\n                <label>品牌型号:</label>\n                <span>{{ selectedTask.vehicle.brand }} {{ selectedTask.vehicle.model }}</span>\n              </div>\n              <div class=\"detail-item\">\n                <label>年份:</label>\n                <span>{{ selectedTask.vehicle.year }}</span>\n              </div>\n              <div class=\"detail-item\">\n                <label>颜色:</label>\n                <span>{{ selectedTask.vehicle.color }}</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"detail-section\">\n            <h3>客户信息</h3>\n            <div class=\"detail-grid\" v-if=\"selectedTask.user\">\n              <div class=\"detail-item\">\n                <label>客户姓名:</label>\n                <span>{{ selectedTask.user.name }}</span>\n              </div>\n              <div class=\"detail-item\">\n                <label>联系电话:</label>\n                <span>{{ selectedTask.user.phone }}</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"detail-section\">\n            <h3>维修详情</h3>\n            <div class=\"detail-item full-width\">\n              <label>故障描述:</label>\n              <p class=\"description\">{{ selectedTask.description }}</p>\n            </div>\n            <div class=\"detail-grid\">\n              <div class=\"detail-item\">\n                <label>工时费用:</label>\n                <span class=\"amount\">¥{{ selectedTask.laborCost || 0 }}</span>\n              </div>\n              <div class=\"detail-item\">\n                <label>材料费用:</label>\n                <span class=\"amount\">¥{{ selectedTask.materialCost || 0 }}</span>\n              </div>\n              <div class=\"detail-item\">\n                <label>总费用:</label>\n                <span class=\"amount total\">¥{{ selectedTask.totalCost || (selectedTask.laborCost || 0) + (selectedTask.materialCost || 0) }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button v-if=\"selectedTask.status === 'ASSIGNED'\" @click=\"startTask(selectedTask)\" class=\"btn btn-primary\">\n            <i class=\"fas fa-play\"></i> 开始任务\n          </button>\n          <button v-if=\"selectedTask.status === 'IN_PROGRESS'\" @click=\"completeTask(selectedTask)\" class=\"btn btn-success\">\n            <i class=\"fas fa-check\"></i> 完成任务\n          </button>\n          <button @click=\"closeTaskDetail\" class=\"btn btn-outline\">\n            <i class=\"fas fa-times\"></i> 关闭\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 完成任务模态框 -->\n    <div v-if=\"showCompleteTask && selectedTask\" class=\"modal-overlay\" @click=\"closeCompleteTask\">\n      <div class=\"modal-content\" @click.stop>\n        <div class=\"modal-header\">\n          <h2>完成任务</h2>\n          <button class=\"modal-close\" @click=\"closeCompleteTask\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"task-summary\">\n            <h3>{{ selectedTask.orderNumber || `维修单 #${selectedTask.id}` }}</h3>\n            <p>{{ selectedTask.description }}</p>\n            <p><strong>车辆:</strong> {{ getVehicleDisplay(selectedTask) }}</p>\n          </div>\n          \n          <form @submit.prevent=\"submitCompleteTask\">\n            <div class=\"form-group\">\n              <label class=\"form-label\">使用材料</label>\n              <div class=\"material-row\" v-for=\"(row, idx) in materialRows\" :key=\"idx\" style=\"display:flex;gap:0.5rem;margin-bottom:0.5rem;\">\n                <select v-model=\"row.materialId\" required style=\"flex:2;\">\n                  <option :value=\"null\" disabled>选择材料</option>\n                  <option v-for=\"m in materials\" :key=\"m.id\" :value=\"m.id\">\n                    {{ m.name }} (¥{{ m.unitPrice }})\n                  </option>\n                </select>\n                <input type=\"number\" v-model.number=\"row.quantity\" min=\"0.1\" step=\"0.1\" placeholder=\"数量\" style=\"flex:1;\" required>\n                <span style=\"flex:1;\">¥{{ materialRowCost(row) }}</span>\n                <button type=\"button\" @click=\"removeMaterialRow(idx)\" v-if=\"materialRows.length>1\" style=\"flex:0 0 auto;\">删除</button>\n              </div>\n              <button type=\"button\" @click=\"addMaterialRow\" class=\"btn btn-outline\" style=\"margin-top:0.5rem;\">添加材料</button>\n              <p style=\"margin-top:0.5rem;\">材料总费用：<strong>¥{{ materialCostComputed }}</strong></p>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">工作说明</label>\n              <textarea v-model=\"completeTaskForm.workNotes\" class=\"form-input\" rows=\"3\"\n                        placeholder=\"请简要说明本次维修的工作内容（可选）\"></textarea>\n            </div>\n            \n            <div class=\"modal-footer\">\n              <button type=\"button\" @click=\"closeCompleteTask\" class=\"btn btn-outline\">\n                取消\n              </button>\n              <button type=\"submit\" class=\"btn btn-success\" :disabled=\"isSubmitting\">\n                <i class=\"fas fa-check\"></i> {{ isSubmitting ? '完成中...' : '完成任务' }}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'TechnicianDashboard',\n  data() {\n    return {\n      user: {},\n      activeTab: 'overview',\n      showUserMenu: false,\n      showTaskDetail: false,\n      showCompleteTask: false,\n      taskFilter: '',\n      allTasks: [],\n      selectedTask: null,\n      completeTaskForm: {\n        materialCost: '',\n        workNotes: ''\n      },\n      statistics: {\n        totalTasks: 0,\n        completedTasks: 0,\n        pendingTasks: 0,\n        monthlyEarnings: 0\n      },\n      earnings: {\n        monthly: 0,\n        total: 0,\n        averagePerTask: 0\n      },\n      profileForm: {},\n      isSubmitting: false,\n      materials: [],\n      materialRows: [\n        { materialId: null, quantity: 1 }\n      ]\n    }\n  },\n  computed: {\n    pendingTasks() {\n      return this.allTasks.filter(task => task.status === 'ASSIGNED' || task.status === 'IN_PROGRESS');\n    },\n    completedTasks() {\n      return this.allTasks.filter(task => task.status === 'COMPLETED');\n    },\n    filteredTasks() {\n      if (!this.taskFilter) return this.allTasks;\n      return this.allTasks.filter(task => task.status === this.taskFilter);\n    },\n    materialCostComputed() {\n      return this.materialRows.reduce((sum, row) => {\n        const mat = this.materials.find(m => m.id === row.materialId);\n        if (mat && row.quantity) {\n          return sum + mat.unitPrice * row.quantity;\n        }\n        return sum;\n      }, 0).toFixed(2);\n    }\n  },\n  created() {\n    this.loadUserInfo();\n    this.loadData();\n  },\n  methods: {\n    loadUserInfo() {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        this.user = JSON.parse(userData);\n        this.profileForm = { ...this.user };\n        console.log('加载的技师数据:', this.user);\n        \n        // 检查技师ID是否存在\n        if (!this.user.id) {\n          console.error('技师数据中缺少ID字段:', this.user);\n          this.$emit('message', '用户数据错误，请重新登录', 'error');\n          this.logout();\n        }\n      } else {\n        console.error('localStorage中没有技师数据');\n        this.$emit('message', '未找到用户信息，请重新登录', 'error');\n        this.logout();\n      }\n    },\n    async loadData() {\n      try {\n        await Promise.all([\n          this.loadTasks(),\n          this.loadStatistics(),\n          this.loadEarnings()\n        ]);\n      } catch (error) {\n        console.error('加载数据失败:', error);\n        this.$emit('message', '加载数据失败', 'error');\n      }\n    },\n    async loadTasks() {\n      try {\n        console.log('开始加载技师任务，技师ID:', this.user.id);\n        const response = await this.$axios.get(`/repair-orders/technician/${this.user.id}`);\n        console.log('技师任务API响应:', response.data);\n        this.allTasks = response.data || [];\n        console.log('设置技师任务数据:', this.allTasks);\n        \n        if (this.allTasks.length === 0) {\n          console.log('没有找到分配给该技师的任务');\n        } else {\n          console.log(`成功加载 ${this.allTasks.length} 个任务`);\n        }\n      } catch (error) {\n        console.error('加载技师任务失败:', error);\n        console.error('错误详情:', error.response?.data);\n        \n        // 设置空数组避免界面错误\n        this.allTasks = [];\n        this.$emit('message', `加载任务失败: ${error.response?.data?.message || error.message}`, 'error');\n      }\n    },\n    async loadStatistics() {\n      try {\n        console.log('开始加载技师统计数据，技师ID:', this.user.id);\n        const response = await this.$axios.get(`/technicians/${this.user.id}/statistics`);\n        console.log('技师统计API响应:', response.data);\n        \n        this.statistics = {\n          totalTasks: response.data.totalTasks || 0,\n          completedTasks: response.data.completedTasks || 0,\n          pendingTasks: response.data.pendingTasks || 0,\n          monthlyEarnings: response.data.monthlyEarnings || 0\n        };\n        \n        console.log('设置统计数据:', this.statistics);\n      } catch (error) {\n        console.error('加载统计数据失败:', error);\n        \n        // 基于本地任务数据计算统计信息作为备用\n        const totalTasks = this.allTasks.length;\n        const completedTasks = this.allTasks.filter(task => task.status === 'COMPLETED').length;\n        const pendingTasks = this.allTasks.filter(task => \n          task.status === 'ASSIGNED' || task.status === 'IN_PROGRESS'\n        ).length;\n        \n        this.statistics = {\n          totalTasks,\n          completedTasks,\n          pendingTasks,\n          monthlyEarnings: 0 // 无法本地计算，需要服务器端\n        };\n        \n        console.log('使用本地计算的统计数据:', this.statistics);\n      }\n    },\n    \n    async loadEarnings() {\n      try {\n        console.log('开始加载技师收入数据，技师ID:', this.user.id);\n        \n        // 获取总收入\n        const totalEarningsResponse = await this.$axios.get(`/technicians/${this.user.id}/earnings`);\n        const totalEarnings = totalEarningsResponse.data || 0;\n        \n        // 获取本月收入\n        const monthlyEarningsResponse = await this.$axios.get(`/technicians/${this.user.id}/monthly-earnings`);\n        const monthlyEarnings = monthlyEarningsResponse.data || 0;\n        \n        // 计算平均每任务收入\n        const completedTaskCount = this.statistics.completedTasks || 1;\n        const averagePerTask = totalEarnings / completedTaskCount;\n        \n        this.earnings = {\n          monthly: monthlyEarnings,\n          total: totalEarnings,\n          averagePerTask: Math.round(averagePerTask * 100) / 100 // 保留两位小数\n        };\n        \n        console.log('设置收入数据:', this.earnings);\n      } catch (error) {\n        console.error('加载收入数据失败:', error);\n        \n        // 基于完成的任务估算收入作为备用\n        const completedTasks = this.allTasks.filter(task => task.status === 'COMPLETED');\n        const estimatedTotal = completedTasks.reduce((sum, task) => {\n          // 估算：假设每个任务平均工作8小时\n          const estimatedHours = 8;\n          const hourlyRate = this.user.hourlyRate || 50;\n          return sum + (estimatedHours * hourlyRate);\n        }, 0);\n        \n        this.earnings = {\n          monthly: Math.round(estimatedTotal * 0.3 * 100) / 100, // 假设本月占30%\n          total: Math.round(estimatedTotal * 100) / 100,\n          averagePerTask: completedTasks.length > 0 ? Math.round((estimatedTotal / completedTasks.length) * 100) / 100 : 0\n        };\n        \n        console.log('使用估算的收入数据:', this.earnings);\n      }\n    },\n    \n    formatCurrency(amount) {\n      return Math.round((amount || 0) * 100) / 100;\n    },\n    \n    toggleUserMenu() {\n      this.showUserMenu = !this.showUserMenu;\n    },\n    getSkillTypeName(skillType) {\n      const skillMap = {\n        'MECHANIC': '机械维修',\n        'ELECTRICIAN': '电气维修',\n        'BODY_WORK': '车身维修',\n        'PAINT': '喷漆',\n        'DIAGNOSTIC': '诊断'\n      };\n      return skillMap[skillType] || skillType;\n    },\n    getStatusText(status) {\n      const statusMap = {\n        'PENDING': '待处理',\n        'ASSIGNED': '已分配',\n        'IN_PROGRESS': '进行中',\n        'COMPLETED': '已完成',\n        'CANCELLED': '已取消'\n      };\n      return statusMap[status] || status;\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('zh-CN');\n    },\n    calculateDuration(startDate, endDate) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      const days = Math.ceil((end - start) / (1000 * 60 * 60 * 24));\n      return `${days}天`;\n    },\n    async startTask(task) {\n      try {\n        console.log('开始任务:', task.id);\n        const response = await this.$axios.put(`/repair-orders/${task.id}/status`, null, {\n          params: { status: 'IN_PROGRESS' }\n        });\n        \n        // 更新本地任务状态\n        const taskIndex = this.allTasks.findIndex(t => t.id === task.id);\n        if (taskIndex !== -1) {\n          this.allTasks[taskIndex].status = 'IN_PROGRESS';\n          this.allTasks[taskIndex].updatedAt = new Date().toISOString();\n        }\n        \n        this.loadStatistics(); // 重新计算统计信息\n        this.$emit('message', '任务已开始', 'success');\n      } catch (error) {\n        console.error('开始任务失败:', error);\n        // 如果API不存在，直接更新本地状态\n        const taskIndex = this.allTasks.findIndex(t => t.id === task.id);\n        if (taskIndex !== -1) {\n          this.allTasks[taskIndex].status = 'IN_PROGRESS';\n          this.allTasks[taskIndex].updatedAt = new Date().toISOString();\n        }\n        this.loadStatistics();\n        this.$emit('message', '任务已开始', 'success');\n      }\n    },\n    async completeTask(task) {\n      this.selectedTask = task;\n      this.completeTaskForm = {\n        materialCost: '',\n        workNotes: ''\n      };\n      this.materialRows = [{ materialId: null, quantity: 1 }];\n      await this.fetchMaterials();\n      this.showCompleteTask = true;\n    },\n    viewTask(task) {\n      this.selectedTask = task;\n      this.showTaskDetail = true;\n    },\n    viewTaskDetail(task) {\n      this.selectedTask = task;\n      this.showTaskDetail = true;\n    },\n    closeTaskDetail() {\n      this.showTaskDetail = false;\n      this.selectedTask = null;\n    },\n    getVehicleDisplay(task) {\n      if (task.vehicle) {\n        return `${task.vehicle.licensePlate} - ${task.vehicle.brand} ${task.vehicle.model}`;\n      }\n      return '未知车辆';\n    },\n    async updateProfile() {\n      try {\n        // 构建完整的技师更新请求数据\n        const updateData = {\n          name: this.profileForm.name,\n          employeeId: this.user.employeeId, // 保持原员工ID\n          username: this.user.username, // 保持原用户名\n          password: '', // 不更新密码时发送空字符串\n          phone: this.profileForm.phone,\n          email: this.profileForm.email,\n          skillType: this.profileForm.skillType,\n          hourlyRate: parseFloat(this.profileForm.hourlyRate)\n        };\n        \n        const response = await this.$axios.put(`/technicians/${this.user.id}`, updateData);\n        this.user = { ...this.user, ...response.data };\n        this.profileForm = { ...this.user };\n        localStorage.setItem('user', JSON.stringify(this.user));\n        this.$emit('message', '个人资料更新成功', 'success');\n      } catch (error) {\n        console.error('更新资料失败:', error);\n        const errorMessage = error.response?.data?.message || error.message || '更新资料失败';\n        this.$emit('message', errorMessage, 'error');\n      }\n    },\n    logout() {\n      localStorage.removeItem('user');\n      localStorage.removeItem('userRole');\n      this.$router.push('/');\n    },\n    async submitCompleteTask() {\n      try {\n        this.isSubmitting = true;\n        console.log('提交完成任务:', this.selectedTask.id);\n        const response = await this.$axios.put(`/repair-orders/${this.selectedTask.id}/status`, null, {\n          params: { \n            status: 'COMPLETED',\n            materialCost: this.completeTaskForm.materialCost\n          }\n        });\n        \n        // 更新本地任务状态\n        const taskIndex = this.allTasks.findIndex(t => t.id === this.selectedTask.id);\n        if (taskIndex !== -1) {\n          this.allTasks[taskIndex].status = 'COMPLETED';\n          this.allTasks[taskIndex].completedAt = new Date().toISOString();\n          this.allTasks[taskIndex].materialCost = this.completeTaskForm.materialCost;\n          this.allTasks[taskIndex].updatedAt = new Date().toISOString();\n        }\n        \n        this.closeCompleteTask();\n        this.loadStatistics(); // 重新计算统计信息\n        this.loadEarnings(); // 重新计算收入\n        this.$emit('message', '任务已完成！', 'success');\n      } catch (error) {\n        console.error('完成任务失败:', error);\n        this.$emit('message', '完成任务失败: ' + (error.response?.data?.message || error.message), 'error');\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    closeCompleteTask() {\n      this.showCompleteTask = false;\n      this.selectedTask = null;\n      this.completeTaskForm = {\n        materialCost: '',\n        workNotes: ''\n      };\n    },\n    async fetchMaterials() {\n      try {\n        const res = await this.$axios.get('/materials');\n        this.materials = res.data || [];\n      } catch (e) {\n        console.error('加载材料列表失败', e);\n        this.$emit('message', '加载材料列表失败', 'error');\n      }\n    },\n    addMaterialRow() {\n      this.materialRows.push({ materialId: null, quantity: 1 });\n    },\n    removeMaterialRow(index) {\n      this.materialRows.splice(index, 1);\n    },\n    materialRowCost(row) {\n      const mat = this.materials.find(m => m.id === row.materialId);\n      return mat && row.quantity ? (mat.unitPrice * row.quantity).toFixed(2) : 0;\n    }\n  },\n  watch: {\n    materialCostComputed(newVal) {\n      this.completeTaskForm.materialCost = newVal;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.technician-dashboard {\n  min-height: 100vh;\n  background: #f8fafc;\n}\n\n.dashboard-header {\n  background: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  padding: 0 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: #f59e0b;\n}\n\n.nav-menu {\n  display: flex;\n  gap: 1rem;\n}\n\n.nav-menu a {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 1rem;\n  text-decoration: none;\n  color: #6b7280;\n  transition: color 0.2s;\n  border-bottom: 3px solid transparent;\n}\n\n.nav-menu a:hover,\n.nav-menu a.active {\n  color: #f59e0b;\n  border-bottom-color: #f59e0b;\n}\n\n.header-right {\n  position: relative;\n}\n\n.user-menu {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  border-radius: 0.5rem;\n  transition: background-color 0.2s;\n}\n\n.user-menu:hover {\n  background: #f3f4f6;\n}\n\n.user-avatar {\n  width: 2rem;\n  height: 2rem;\n  background: #f59e0b;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n}\n\n.user-dropdown {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 10px 25px rgba(0,0,0,0.1);\n  min-width: 200px;\n  z-index: 1000;\n}\n\n.user-dropdown a {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  text-decoration: none;\n  color: #374151;\n  transition: background-color 0.2s;\n}\n\n.user-dropdown a:hover {\n  background: #f3f4f6;\n}\n\n.dashboard-main {\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.tab-content {\n  animation: fadeIn 0.3s ease;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.welcome-section {\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\n.welcome-section h1 {\n  font-size: 2rem;\n  color: #1f2937;\n  margin-bottom: 1rem;\n}\n\n.skill-badge {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  background: linear-gradient(135deg, #f59e0b, #d97706);\n  color: white;\n  border-radius: 9999px;\n  font-weight: 500;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.stat-card {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.stat-icon {\n  width: 3rem;\n  height: 3rem;\n  border-radius: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 1.25rem;\n}\n\n.stat-content h3 {\n  font-size: 1.5rem;\n  font-weight: 700;\n  margin: 0;\n  color: #1f2937;\n}\n\n.stat-content p {\n  margin: 0;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.info-section {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.technician-card {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n  display: flex;\n  gap: 1rem;\n}\n\n.tech-avatar {\n  width: 4rem;\n  height: 4rem;\n  background: linear-gradient(135deg, #f59e0b, #d97706);\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 1.5rem;\n}\n\n.tech-info h3 {\n  margin: 0 0 0.5rem 0;\n  color: #1f2937;\n}\n\n.tech-id {\n  color: #6b7280;\n  font-size: 0.875rem;\n  margin-bottom: 1rem;\n}\n\n.tech-details {\n  display: grid;\n  gap: 0.5rem;\n}\n\n.detail-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  color: #374151;\n}\n\n.detail-item i {\n  color: #f59e0b;\n  width: 1rem;\n}\n\n.earnings-overview {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n}\n\n.earnings-overview h3 {\n  margin: 0 0 1rem 0;\n  color: #1f2937;\n}\n\n.earnings-stats {\n  margin-bottom: 1rem;\n}\n\n.earnings-item {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n}\n\n.earnings-label {\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.earnings-value {\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.pending-tasks {\n  margin-bottom: 2rem;\n}\n\n.pending-tasks h2 {\n  margin-bottom: 1rem;\n  color: #1f2937;\n}\n\n.task-list {\n  background: white;\n  border-radius: 1rem;\n  padding: 1.5rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n  margin-bottom: 1rem;\n}\n\n.task-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 0;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.task-item:last-child {\n  border-bottom: none;\n}\n\n.task-info h4 {\n  margin: 0 0 0.25rem 0;\n  color: #1f2937;\n}\n\n.task-info p {\n  margin: 0 0 0.5rem 0;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.task-meta {\n  display: flex;\n  gap: 1rem;\n  font-size: 0.75rem;\n  color: #9ca3af;\n}\n\n.task-actions {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.task-status {\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: 0.75rem;\n  font-weight: 500;\n  text-transform: uppercase;\n}\n\n.task-status.pending {\n  background: #fef3c7;\n  color: #d97706;\n}\n\n.task-status.in_progress {\n  background: #dbeafe;\n  color: #2563eb;\n}\n\n.task-status.completed {\n  background: #d1fae5;\n  color: #059669;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n}\n\n.section-header h2 {\n  font-size: 1.5rem;\n  color: #1f2937;\n  margin: 0;\n}\n\n.task-filters {\n  display: flex;\n  gap: 1rem;\n}\n\n.tasks-container,\n.history-container {\n  display: grid;\n  gap: 1.5rem;\n}\n\n.task-card,\n.history-card {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n}\n\n.task-header,\n.history-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.status-badge {\n  padding: 0.5rem 1rem;\n  border-radius: 9999px;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.task-timeline {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  margin: 1rem 0;\n}\n\n.timeline-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.timeline-item i {\n  color: #f59e0b;\n}\n\n.task-footer {\n  display: flex;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n.btn-sm {\n  padding: 0.5rem 1rem;\n  font-size: 0.875rem;\n}\n\n.history-metrics {\n  display: flex;\n  gap: 1rem;\n  margin-top: 0.5rem;\n}\n\n.metric {\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.metric i {\n  color: #f59e0b;\n}\n\n.earnings-dashboard {\n  max-width: 800px;\n}\n\n.earnings-summary {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.summary-card {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n  text-align: center;\n}\n\n.summary-card h3 {\n  margin: 0 0 1rem 0;\n  color: #6b7280;\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.amount {\n  font-size: 2rem;\n  font-weight: 700;\n  color: #1f2937;\n  margin-bottom: 0.5rem;\n}\n\n.change {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.25rem;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.change.positive {\n  color: #059669;\n}\n\n.tasks-count {\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.profile-container {\n  max-width: 600px;\n}\n\n.profile-form {\n  background: white;\n  padding: 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n}\n\n.empty-state {\n  text-align: center;\n  padding: 3rem 1rem;\n  color: #6b7280;\n}\n\n.empty-state i {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  opacity: 0.5;\n}\n\n.empty-state h3 {\n  margin-bottom: 0.5rem;\n  color: #374151;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .dashboard-header {\n    padding: 0 1rem;\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .header-left {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .nav-menu {\n    overflow-x: auto;\n  }\n  \n  .dashboard-main {\n    padding: 1rem;\n  }\n  \n  .stats-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .info-section {\n    grid-template-columns: 1fr;\n  }\n  \n  .section-header {\n    flex-direction: column;\n    gap: 1rem;\n    align-items: stretch;\n  }\n  \n  .task-item {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 1rem;\n  }\n  \n  .task-actions {\n    justify-content: space-between;\n  }\n}\n\n/* 模态框样式 */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 1rem;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 1rem;\n  max-width: 800px;\n  width: 100%;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.modal-header h2 {\n  margin: 0;\n  color: #1f2937;\n  font-size: 1.5rem;\n}\n\n.modal-close {\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n}\n\n.modal-close:hover {\n  background: #f3f4f6;\n  color: #374151;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.modal-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  padding: 1.5rem;\n  border-top: 1px solid #e5e7eb;\n}\n\n.detail-section {\n  margin-bottom: 2rem;\n}\n\n.detail-section:last-child {\n  margin-bottom: 0;\n}\n\n.detail-section h3 {\n  margin: 0 0 1rem 0;\n  color: #1f2937;\n  font-size: 1.125rem;\n  font-weight: 600;\n  border-bottom: 2px solid #f59e0b;\n  padding-bottom: 0.5rem;\n}\n\n.detail-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n}\n\n.detail-item {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.detail-item.full-width {\n  grid-column: 1 / -1;\n}\n\n.detail-item label {\n  font-weight: 600;\n  color: #374151;\n  font-size: 0.875rem;\n}\n\n.detail-item span {\n  color: #6b7280;\n}\n\n.detail-item .description {\n  background: #f9fafb;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  margin: 0;\n  color: #374151;\n  line-height: 1.6;\n}\n\n.detail-item .amount {\n  font-weight: 600;\n  color: #059669;\n}\n\n.detail-item .amount.total {\n  color: #dc2626;\n  font-size: 1.125rem;\n}\n\n.task-info {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  margin: 1rem 0;\n}\n\n.info-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.info-item i {\n  color: #f59e0b;\n  width: 16px;\n}\n\n.status-badge.assigned {\n  background: #fef3c7;\n  color: #d97706;\n}\n\n.status-badge.in_progress {\n  background: #dbeafe;\n  color: #2563eb;\n}\n\n.status-badge.completed {\n  background: #d1fae5;\n  color: #059669;\n}\n\n.status-badge.cancelled {\n  background: #fee2e2;\n  color: #dc2626;\n}\n\n@media (max-width: 768px) {\n  .modal-content {\n    margin: 1rem;\n    max-height: calc(100vh - 2rem);\n  }\n  \n  .detail-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .modal-footer {\n    flex-direction: column;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}